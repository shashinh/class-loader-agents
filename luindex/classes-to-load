clazz = Class.forName("Harness");
clazz = Class.forName("org.apache.lucene.analysis.Analyzer");
clazz = Class.forName("org.apache.lucene.analysis.CharArraySet");
clazz = Class.forName("org.apache.lucene.analysis.CharTokenizer");
clazz = Class.forName("org.apache.lucene.analysis.LetterTokenizer");
clazz = Class.forName("org.apache.lucene.analysis.LowerCaseFilter");
clazz = Class.forName("org.apache.lucene.analysis.LowerCaseTokenizer");
clazz = Class.forName("org.apache.lucene.analysis.StopAnalyzer");
clazz = Class.forName("org.apache.lucene.analysis.StopFilter");
clazz = Class.forName("org.apache.lucene.analysis.Token");
clazz = Class.forName("org.apache.lucene.analysis.TokenFilter");
clazz = Class.forName("org.apache.lucene.analysis.TokenStream");
clazz = Class.forName("org.apache.lucene.analysis.Tokenizer");
clazz = Class.forName("org.apache.lucene.analysis.standard.StandardAnalyzer$SavedStreams");
clazz = Class.forName("org.apache.lucene.analysis.standard.StandardAnalyzer");
clazz = Class.forName("org.apache.lucene.analysis.standard.StandardFilter");
clazz = Class.forName("org.apache.lucene.analysis.standard.StandardTokenizer");
clazz = Class.forName("org.apache.lucene.analysis.standard.StandardTokenizerImpl");
clazz = Class.forName("org.apache.lucene.demo.FileDocument");
clazz = Class.forName("org.apache.lucene.document.AbstractField");
clazz = Class.forName("org.apache.lucene.document.DateTools$Resolution");
clazz = Class.forName("org.apache.lucene.document.DateTools");
clazz = Class.forName("org.apache.lucene.document.Document");
clazz = Class.forName("org.apache.lucene.document.Field$Index");
clazz = Class.forName("org.apache.lucene.document.Field$Store");
clazz = Class.forName("org.apache.lucene.document.Field$TermVector");
clazz = Class.forName("org.apache.lucene.document.Field");
clazz = Class.forName("org.apache.lucene.document.FieldSelector");
clazz = Class.forName("org.apache.lucene.document.Fieldable");
clazz = Class.forName("org.apache.lucene.index.BufferedDeletes");
clazz = Class.forName("org.apache.lucene.index.ByteBlockPool$Allocator");
clazz = Class.forName("org.apache.lucene.index.ByteBlockPool");
clazz = Class.forName("org.apache.lucene.index.ByteSliceReader");
clazz = Class.forName("org.apache.lucene.index.CharBlockPool");
clazz = Class.forName("org.apache.lucene.index.CompoundFileReader$CSIndexInput");
clazz = Class.forName("org.apache.lucene.index.CompoundFileReader$FileEntry");
clazz = Class.forName("org.apache.lucene.index.CompoundFileReader");
clazz = Class.forName("org.apache.lucene.index.CompoundFileWriter$FileEntry");
clazz = Class.forName("org.apache.lucene.index.CompoundFileWriter");
clazz = Class.forName("org.apache.lucene.index.ConcurrentMergeScheduler$MergeThread");
clazz = Class.forName("org.apache.lucene.index.ConcurrentMergeScheduler");
clazz = Class.forName("org.apache.lucene.index.CorruptIndexException");
clazz = Class.forName("org.apache.lucene.index.DefaultSkipListWriter");
clazz = Class.forName("org.apache.lucene.index.DirectoryIndexReader$1");
clazz = Class.forName("org.apache.lucene.index.DirectoryIndexReader$2");
clazz = Class.forName("org.apache.lucene.index.DirectoryIndexReader$ReaderCommit");
clazz = Class.forName("org.apache.lucene.index.DirectoryIndexReader");
clazz = Class.forName("org.apache.lucene.index.DocConsumer");
clazz = Class.forName("org.apache.lucene.index.DocConsumerPerThread");
clazz = Class.forName("org.apache.lucene.index.DocFieldConsumer");
clazz = Class.forName("org.apache.lucene.index.DocFieldConsumerPerField");
clazz = Class.forName("org.apache.lucene.index.DocFieldConsumerPerThread");
clazz = Class.forName("org.apache.lucene.index.DocFieldConsumers$PerDoc");
clazz = Class.forName("org.apache.lucene.index.DocFieldConsumers");
clazz = Class.forName("org.apache.lucene.index.DocFieldConsumersPerField");
clazz = Class.forName("org.apache.lucene.index.DocFieldConsumersPerThread");
clazz = Class.forName("org.apache.lucene.index.DocFieldProcessor");
clazz = Class.forName("org.apache.lucene.index.DocFieldProcessorPerField");
clazz = Class.forName("org.apache.lucene.index.DocFieldProcessorPerThread");
clazz = Class.forName("org.apache.lucene.index.DocInverter$FieldInvertState");
clazz = Class.forName("org.apache.lucene.index.DocInverter");
clazz = Class.forName("org.apache.lucene.index.DocInverterPerField");
clazz = Class.forName("org.apache.lucene.index.DocInverterPerThread");
clazz = Class.forName("org.apache.lucene.index.DocumentsWriter$ByteBlockAllocator");
clazz = Class.forName("org.apache.lucene.index.DocumentsWriter$DocState");
clazz = Class.forName("org.apache.lucene.index.DocumentsWriter$DocWriter");
clazz = Class.forName("org.apache.lucene.index.DocumentsWriter$FlushState");
clazz = Class.forName("org.apache.lucene.index.DocumentsWriter$SkipDocWriter");
clazz = Class.forName("org.apache.lucene.index.DocumentsWriter$WaitQueue");
clazz = Class.forName("org.apache.lucene.index.DocumentsWriter");
clazz = Class.forName("org.apache.lucene.index.DocumentsWriterThreadState");
clazz = Class.forName("org.apache.lucene.index.FieldInfo");
clazz = Class.forName("org.apache.lucene.index.FieldInfos");
clazz = Class.forName("org.apache.lucene.index.FieldsReader$FieldForMerge");
clazz = Class.forName("org.apache.lucene.index.FieldsWriter");
clazz = Class.forName("org.apache.lucene.index.FreqProxFieldMergeState");
clazz = Class.forName("org.apache.lucene.index.FreqProxTermsWriter$PostingList");
clazz = Class.forName("org.apache.lucene.index.FreqProxTermsWriter");
clazz = Class.forName("org.apache.lucene.index.FreqProxTermsWriterPerField");
clazz = Class.forName("org.apache.lucene.index.FreqProxTermsWriterPerThread");
clazz = Class.forName("org.apache.lucene.index.IndexCommit");
clazz = Class.forName("org.apache.lucene.index.IndexCommitPoint");
clazz = Class.forName("org.apache.lucene.index.IndexDeletionPolicy");
clazz = Class.forName("org.apache.lucene.index.IndexFileDeleter$CommitPoint");
clazz = Class.forName("org.apache.lucene.index.IndexFileDeleter$RefCount");
clazz = Class.forName("org.apache.lucene.index.IndexFileDeleter");
clazz = Class.forName("org.apache.lucene.index.IndexFileNameFilter");
clazz = Class.forName("org.apache.lucene.index.IndexFileNames");
clazz = Class.forName("org.apache.lucene.index.IndexReader");
clazz = Class.forName("org.apache.lucene.index.IndexWriter$MaxFieldLength");
clazz = Class.forName("org.apache.lucene.index.IndexWriter");
clazz = Class.forName("org.apache.lucene.index.IntBlockPool");
clazz = Class.forName("org.apache.lucene.index.InvertedDocConsumer");
clazz = Class.forName("org.apache.lucene.index.InvertedDocConsumerPerField");
clazz = Class.forName("org.apache.lucene.index.InvertedDocConsumerPerThread");
clazz = Class.forName("org.apache.lucene.index.InvertedDocEndConsumer");
clazz = Class.forName("org.apache.lucene.index.InvertedDocEndConsumerPerField");
clazz = Class.forName("org.apache.lucene.index.InvertedDocEndConsumerPerThread");
clazz = Class.forName("org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy");
clazz = Class.forName("org.apache.lucene.index.LogByteSizeMergePolicy");
clazz = Class.forName("org.apache.lucene.index.LogMergePolicy");
clazz = Class.forName("org.apache.lucene.index.MergePolicy$MergeAbortedException");
clazz = Class.forName("org.apache.lucene.index.MergePolicy$MergeException");
clazz = Class.forName("org.apache.lucene.index.MergePolicy$MergeSpecification");
clazz = Class.forName("org.apache.lucene.index.MergePolicy$OneMerge");
clazz = Class.forName("org.apache.lucene.index.MergePolicy");
clazz = Class.forName("org.apache.lucene.index.MergeScheduler");
clazz = Class.forName("org.apache.lucene.index.MultiLevelSkipListWriter");
clazz = Class.forName("org.apache.lucene.index.MultiSegmentReader");
clazz = Class.forName("org.apache.lucene.index.NormsWriter");
clazz = Class.forName("org.apache.lucene.index.NormsWriterPerField");
clazz = Class.forName("org.apache.lucene.index.NormsWriterPerThread");
clazz = Class.forName("org.apache.lucene.index.RawPostingList");
clazz = Class.forName("org.apache.lucene.index.ReadOnlyMultiSegmentReader");
clazz = Class.forName("org.apache.lucene.index.ReadOnlySegmentReader");
clazz = Class.forName("org.apache.lucene.index.ReusableStringReader");
clazz = Class.forName("org.apache.lucene.index.SegmentInfo");
clazz = Class.forName("org.apache.lucene.index.SegmentInfos$1");
clazz = Class.forName("org.apache.lucene.index.SegmentInfos$FindSegmentsFile");
clazz = Class.forName("org.apache.lucene.index.SegmentInfos");
clazz = Class.forName("org.apache.lucene.index.SegmentMergeInfo");
clazz = Class.forName("org.apache.lucene.index.SegmentMergeQueue");
clazz = Class.forName("org.apache.lucene.index.SegmentMerger$CheckAbort");
clazz = Class.forName("org.apache.lucene.index.SegmentMerger");
clazz = Class.forName("org.apache.lucene.index.SegmentReader$Norm");
clazz = Class.forName("org.apache.lucene.index.SegmentReader");
clazz = Class.forName("org.apache.lucene.index.SegmentTermDocs");
clazz = Class.forName("org.apache.lucene.index.SegmentTermEnum");
clazz = Class.forName("org.apache.lucene.index.SegmentTermPositions");
clazz = Class.forName("org.apache.lucene.index.StaleReaderException");
clazz = Class.forName("org.apache.lucene.index.StoredFieldsWriter$PerDoc");
clazz = Class.forName("org.apache.lucene.index.StoredFieldsWriter");
clazz = Class.forName("org.apache.lucene.index.StoredFieldsWriterPerField");
clazz = Class.forName("org.apache.lucene.index.StoredFieldsWriterPerThread");
clazz = Class.forName("org.apache.lucene.index.Term");
clazz = Class.forName("org.apache.lucene.index.TermBuffer");
clazz = Class.forName("org.apache.lucene.index.TermDocs");
clazz = Class.forName("org.apache.lucene.index.TermEnum");
clazz = Class.forName("org.apache.lucene.index.TermInfo");
clazz = Class.forName("org.apache.lucene.index.TermInfosReader");
clazz = Class.forName("org.apache.lucene.index.TermInfosWriter");
clazz = Class.forName("org.apache.lucene.index.TermPositions");
clazz = Class.forName("org.apache.lucene.index.TermVectorsTermsWriter$PerDoc");
clazz = Class.forName("org.apache.lucene.index.TermVectorsTermsWriter$PostingList");
clazz = Class.forName("org.apache.lucene.index.TermVectorsTermsWriter");
clazz = Class.forName("org.apache.lucene.index.TermVectorsTermsWriterPerField");
clazz = Class.forName("org.apache.lucene.index.TermVectorsTermsWriterPerThread");
clazz = Class.forName("org.apache.lucene.index.TermsHash");
clazz = Class.forName("org.apache.lucene.index.TermsHashConsumer");
clazz = Class.forName("org.apache.lucene.index.TermsHashConsumerPerField");
clazz = Class.forName("org.apache.lucene.index.TermsHashConsumerPerThread");
clazz = Class.forName("org.apache.lucene.index.TermsHashPerField");
clazz = Class.forName("org.apache.lucene.index.TermsHashPerThread");
clazz = Class.forName("org.apache.lucene.search.DefaultSimilarity");
clazz = Class.forName("org.apache.lucene.search.IndexSearcher");
clazz = Class.forName("org.apache.lucene.search.Searchable");
clazz = Class.forName("org.apache.lucene.search.Searcher");
clazz = Class.forName("org.apache.lucene.search.Similarity");
clazz = Class.forName("org.apache.lucene.store.AlreadyClosedException");
clazz = Class.forName("org.apache.lucene.store.BufferedIndexInput");
clazz = Class.forName("org.apache.lucene.store.BufferedIndexOutput");
clazz = Class.forName("org.apache.lucene.store.ChecksumIndexInput");
clazz = Class.forName("org.apache.lucene.store.ChecksumIndexOutput");
clazz = Class.forName("org.apache.lucene.store.Directory");
clazz = Class.forName("org.apache.lucene.store.FSDirectory$FSIndexInput$Descriptor");
clazz = Class.forName("org.apache.lucene.store.FSDirectory$FSIndexInput");
clazz = Class.forName("org.apache.lucene.store.FSDirectory$FSIndexOutput");
clazz = Class.forName("org.apache.lucene.store.FSDirectory");
clazz = Class.forName("org.apache.lucene.store.IndexInput");
clazz = Class.forName("org.apache.lucene.store.IndexOutput");
clazz = Class.forName("org.apache.lucene.store.Lock");
clazz = Class.forName("org.apache.lucene.store.LockFactory");
clazz = Class.forName("org.apache.lucene.store.LockObtainFailedException");
clazz = Class.forName("org.apache.lucene.store.LockReleaseFailedException");
clazz = Class.forName("org.apache.lucene.store.NoLockFactory");
clazz = Class.forName("org.apache.lucene.store.RAMFile");
clazz = Class.forName("org.apache.lucene.store.RAMOutputStream");
clazz = Class.forName("org.apache.lucene.store.SimpleFSLock");
clazz = Class.forName("org.apache.lucene.store.SimpleFSLockFactory");
clazz = Class.forName("org.apache.lucene.util.ArrayUtil");
clazz = Class.forName("org.apache.lucene.util.CloseableThreadLocal");
clazz = Class.forName("org.apache.lucene.util.Constants");
clazz = Class.forName("org.apache.lucene.util.Parameter");
clazz = Class.forName("org.apache.lucene.util.PriorityQueue");
clazz = Class.forName("org.apache.lucene.util.SmallFloat");
clazz = Class.forName("org.apache.lucene.util.UnicodeUtil$UTF16Result");
clazz = Class.forName("org.apache.lucene.util.UnicodeUtil$UTF8Result");
clazz = Class.forName("org.apache.lucene.util.UnicodeUtil");
clazz = Class.forName("org.apache.lucene.util.cache.Cache");
clazz = Class.forName("org.apache.lucene.util.cache.SimpleLRUCache");
clazz = Class.forName("org.apache.lucene.util.cache.SimpleMapCache");
clazz = Class.forName("org.dacapo.harness.Benchmark");
clazz = Class.forName("org.dacapo.harness.Callback$1");
clazz = Class.forName("org.dacapo.harness.Callback$Mode");
clazz = Class.forName("org.dacapo.harness.Callback");
clazz = Class.forName("org.dacapo.harness.CommandLineArgs$Methodology");
clazz = Class.forName("org.dacapo.harness.CommandLineArgs");
clazz = Class.forName("org.dacapo.harness.DacapoClassLoader");
clazz = Class.forName("org.dacapo.harness.DacapoException");
clazz = Class.forName("org.dacapo.harness.Digest");
clazz = Class.forName("org.dacapo.harness.FileDigest");
clazz = Class.forName("org.dacapo.harness.Luindex");
clazz = Class.forName("org.dacapo.harness.TeeOutputStream");
clazz = Class.forName("org.dacapo.harness.TeePrintStream");
clazz = Class.forName("org.dacapo.harness.TestHarness");
clazz = Class.forName("org.dacapo.luindex.Index");
clazz = Class.forName("org.dacapo.parser.Config$1");
clazz = Class.forName("org.dacapo.parser.Config$OutputFile");
clazz = Class.forName("org.dacapo.parser.Config$Size");
clazz = Class.forName("org.dacapo.parser.Config$ThreadModel");
clazz = Class.forName("org.dacapo.parser.Config");
clazz = Class.forName("org.dacapo.parser.ConfigFile");
clazz = Class.forName("org.dacapo.parser.ConfigFileConstants");
clazz = Class.forName("org.dacapo.parser.ConfigFileTokenManager");
clazz = Class.forName("org.dacapo.parser.ParseException");
clazz = Class.forName("org.dacapo.parser.SimpleCharStream");
clazz = Class.forName("org.dacapo.parser.Token");
clazz = Class.forName("org.dacapo.parser.TokenMgrError");
clazz = Class.forName("soot.rtlib.tamiflex.IUnexpectedReflectiveCallHandler");
clazz = Class.forName("soot.rtlib.tamiflex.OpaquePredicate");
clazz = Class.forName("soot.rtlib.tamiflex.ReflectiveCalls");
clazz = Class.forName("soot.rtlib.tamiflex.ReflectiveCallsWrapper");
clazz = Class.forName("soot.rtlib.tamiflex.SootSig");
clazz = Class.forName("soot.rtlib.tamiflex.UnexpectedReflectiveCall");
