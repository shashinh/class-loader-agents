import java.lang.instrument.Instrumentation;

public class ForNameAgent extends ClassLoader {
	
	static {
		try {
			
			Class clazz;
			clazz = Class.forName("Harness");
			clazz = Class.forName("org.dacapo.h2.TPCC");
			clazz = Class.forName("org.dacapo.h2.TPCC$1");
			clazz = Class.forName("org.dacapo.h2.TPCC$2");
			clazz = Class.forName("org.dacapo.h2.TPCC$3");
			clazz = Class.forName("org.dacapo.h2.TPCCDataSource");
			clazz = Class.forName("org.dacapo.h2.TPCCDataSource$NullWriter");
			clazz = Class.forName("org.dacapo.h2.TPCCReporter");
			clazz = Class.forName("org.dacapo.h2.TPCCSubmitter");
			clazz = Class.forName("org.dacapo.harness.Benchmark");
			clazz = Class.forName("org.dacapo.harness.Callback");
			clazz = Class.forName("org.dacapo.harness.Callback$1");
			clazz = Class.forName("org.dacapo.harness.Callback$Mode");
			clazz = Class.forName("org.dacapo.harness.CommandLineArgs");
			clazz = Class.forName("org.dacapo.harness.CommandLineArgs$Methodology");
			clazz = Class.forName("org.dacapo.harness.DacapoClassLoader");
			clazz = Class.forName("org.dacapo.harness.DacapoException");
			clazz = Class.forName("org.dacapo.harness.Digest");
			clazz = Class.forName("org.dacapo.harness.FileDigest");
			clazz = Class.forName("org.dacapo.harness.H2");
			clazz = Class.forName("org.dacapo.harness.TeeOutputStream");
			clazz = Class.forName("org.dacapo.harness.TeePrintStream");
			clazz = Class.forName("org.dacapo.harness.TestHarness");
			clazz = Class.forName("org.dacapo.parser.Config");
			clazz = Class.forName("org.dacapo.parser.Config$1");
			clazz = Class.forName("org.dacapo.parser.Config$OutputFile");
			clazz = Class.forName("org.dacapo.parser.Config$Size");
			clazz = Class.forName("org.dacapo.parser.Config$ThreadModel");
			clazz = Class.forName("org.dacapo.parser.ConfigFile");
			clazz = Class.forName("org.dacapo.parser.ConfigFileConstants");
			clazz = Class.forName("org.dacapo.parser.ConfigFileTokenManager");
			clazz = Class.forName("org.dacapo.parser.ParseException");
			clazz = Class.forName("org.dacapo.parser.SimpleCharStream");
			clazz = Class.forName("org.dacapo.parser.Token");
			clazz = Class.forName("org.dacapo.parser.TokenMgrError");
			clazz = Class.forName("org.h2.Driver");
			clazz = Class.forName("org.h2.command.Command");
			clazz = Class.forName("org.h2.command.CommandContainer");
			clazz = Class.forName("org.h2.command.CommandInterface");
			clazz = Class.forName("org.h2.command.CommandList");
			clazz = Class.forName("org.h2.command.Parser");
			clazz = Class.forName("org.h2.command.Prepared");
			clazz = Class.forName("org.h2.command.ddl.AlterIndexRename");
			clazz = Class.forName("org.h2.command.ddl.AlterTableAddConstraint");
			clazz = Class.forName("org.h2.command.ddl.AlterTableAlterColumn");
			clazz = Class.forName("org.h2.command.ddl.AlterTableDropConstraint");
			clazz = Class.forName("org.h2.command.ddl.AlterTableRename");
			clazz = Class.forName("org.h2.command.ddl.AlterTableRenameColumn");
			clazz = Class.forName("org.h2.command.ddl.AlterUser");
			clazz = Class.forName("org.h2.command.ddl.AlterView");
			clazz = Class.forName("org.h2.command.ddl.Analyze");
			clazz = Class.forName("org.h2.command.ddl.CreateAggregate");
			clazz = Class.forName("org.h2.command.ddl.CreateConstant");
			clazz = Class.forName("org.h2.command.ddl.CreateFunctionAlias");
			clazz = Class.forName("org.h2.command.ddl.CreateIndex");
			clazz = Class.forName("org.h2.command.ddl.CreateLinkedTable");
			clazz = Class.forName("org.h2.command.ddl.CreateRole");
			clazz = Class.forName("org.h2.command.ddl.CreateSchema");
			clazz = Class.forName("org.h2.command.ddl.CreateSequence");
			clazz = Class.forName("org.h2.command.ddl.CreateTable");
			clazz = Class.forName("org.h2.command.ddl.CreateTableData");
			clazz = Class.forName("org.h2.command.ddl.CreateTrigger");
			clazz = Class.forName("org.h2.command.ddl.CreateUser");
			clazz = Class.forName("org.h2.command.ddl.CreateUserDataType");
			clazz = Class.forName("org.h2.command.ddl.CreateView");
			clazz = Class.forName("org.h2.command.ddl.DeallocateProcedure");
			clazz = Class.forName("org.h2.command.ddl.DefineCommand");
			clazz = Class.forName("org.h2.command.ddl.DropAggregate");
			clazz = Class.forName("org.h2.command.ddl.DropConstant");
			clazz = Class.forName("org.h2.command.ddl.DropDatabase");
			clazz = Class.forName("org.h2.command.ddl.DropFunctionAlias");
			clazz = Class.forName("org.h2.command.ddl.DropIndex");
			clazz = Class.forName("org.h2.command.ddl.DropRole");
			clazz = Class.forName("org.h2.command.ddl.DropSchema");
			clazz = Class.forName("org.h2.command.ddl.DropSequence");
			clazz = Class.forName("org.h2.command.ddl.DropTable");
			clazz = Class.forName("org.h2.command.ddl.DropTrigger");
			clazz = Class.forName("org.h2.command.ddl.DropUser");
			clazz = Class.forName("org.h2.command.ddl.DropUserDataType");
			clazz = Class.forName("org.h2.command.ddl.DropView");
			clazz = Class.forName("org.h2.command.ddl.GrantRevoke");
			clazz = Class.forName("org.h2.command.ddl.PrepareProcedure");
			clazz = Class.forName("org.h2.command.ddl.SchemaCommand");
			clazz = Class.forName("org.h2.command.ddl.SetComment");
			clazz = Class.forName("org.h2.command.ddl.TruncateTable");
			clazz = Class.forName("org.h2.command.dml.AlterSequence");
			clazz = Class.forName("org.h2.command.dml.AlterTableSet");
			clazz = Class.forName("org.h2.command.dml.BackupCommand");
			clazz = Class.forName("org.h2.command.dml.Call");
			clazz = Class.forName("org.h2.command.dml.Delete");
			clazz = Class.forName("org.h2.command.dml.ExecuteProcedure");
			clazz = Class.forName("org.h2.command.dml.ExplainPlan");
			clazz = Class.forName("org.h2.command.dml.Insert");
			clazz = Class.forName("org.h2.command.dml.Merge");
			clazz = Class.forName("org.h2.command.dml.NoOperation");
			clazz = Class.forName("org.h2.command.dml.Optimizer");
			clazz = Class.forName("org.h2.command.dml.Query");
			clazz = Class.forName("org.h2.command.dml.RunScriptCommand");
			clazz = Class.forName("org.h2.command.dml.ScriptBase");
			clazz = Class.forName("org.h2.command.dml.ScriptCommand");
			clazz = Class.forName("org.h2.command.dml.Select");
			clazz = Class.forName("org.h2.command.dml.SelectOrderBy");
			clazz = Class.forName("org.h2.command.dml.SelectUnion");
			clazz = Class.forName("org.h2.command.dml.Set");
			clazz = Class.forName("org.h2.command.dml.SetTypes");
			clazz = Class.forName("org.h2.command.dml.TransactionCommand");
			clazz = Class.forName("org.h2.command.dml.Update");
			clazz = Class.forName("org.h2.constant.ErrorCode");
			clazz = Class.forName("org.h2.constant.SysProperties");
			clazz = Class.forName("org.h2.constraint.Constraint");
			clazz = Class.forName("org.h2.constraint.ConstraintCheck");
			clazz = Class.forName("org.h2.constraint.ConstraintReferential");
			clazz = Class.forName("org.h2.constraint.ConstraintUnique");
			clazz = Class.forName("org.h2.engine.ConnectionInfo");
			clazz = Class.forName("org.h2.engine.Database");
			clazz = Class.forName("org.h2.engine.DatabaseCloser");
			clazz = Class.forName("org.h2.engine.DbObject");
			clazz = Class.forName("org.h2.engine.DbObjectBase");
			clazz = Class.forName("org.h2.engine.Engine");
			clazz = Class.forName("org.h2.engine.MetaRecord");
			clazz = Class.forName("org.h2.engine.MetaRecord$1");
			clazz = Class.forName("org.h2.engine.Mode");
			clazz = Class.forName("org.h2.engine.RightOwner");
			clazz = Class.forName("org.h2.engine.Role");
			clazz = Class.forName("org.h2.engine.Session");
			clazz = Class.forName("org.h2.engine.SessionFactory");
			clazz = Class.forName("org.h2.engine.SessionFactoryEmbedded");
			clazz = Class.forName("org.h2.engine.SessionInterface");
			clazz = Class.forName("org.h2.engine.SessionRemote");
			clazz = Class.forName("org.h2.engine.SessionWithState");
			clazz = Class.forName("org.h2.engine.Setting");
			clazz = Class.forName("org.h2.engine.User");
			clazz = Class.forName("org.h2.expression.Aggregate");
			clazz = Class.forName("org.h2.expression.AggregateData");
			clazz = Class.forName("org.h2.expression.Alias");
			clazz = Class.forName("org.h2.expression.CompareLike");
			clazz = Class.forName("org.h2.expression.Comparison");
			clazz = Class.forName("org.h2.expression.Condition");
			clazz = Class.forName("org.h2.expression.ConditionAndOr");
			clazz = Class.forName("org.h2.expression.ConditionExists");
			clazz = Class.forName("org.h2.expression.ConditionIn");
			clazz = Class.forName("org.h2.expression.ConditionInSelect");
			clazz = Class.forName("org.h2.expression.ConditionNot");
			clazz = Class.forName("org.h2.expression.Expression");
			clazz = Class.forName("org.h2.expression.ExpressionColumn");
			clazz = Class.forName("org.h2.expression.ExpressionList");
			clazz = Class.forName("org.h2.expression.ExpressionVisitor");
			clazz = Class.forName("org.h2.expression.Function");
			clazz = Class.forName("org.h2.expression.FunctionCall");
			clazz = Class.forName("org.h2.expression.FunctionInfo");
			clazz = Class.forName("org.h2.expression.JavaAggregate");
			clazz = Class.forName("org.h2.expression.JavaFunction");
			clazz = Class.forName("org.h2.expression.Operation");
			clazz = Class.forName("org.h2.expression.Parameter");
			clazz = Class.forName("org.h2.expression.ParameterInterface");
			clazz = Class.forName("org.h2.expression.Rownum");
			clazz = Class.forName("org.h2.expression.SequenceValue");
			clazz = Class.forName("org.h2.expression.Subquery");
			clazz = Class.forName("org.h2.expression.TableFunction");
			clazz = Class.forName("org.h2.expression.ValueExpression");
			clazz = Class.forName("org.h2.expression.Variable");
			clazz = Class.forName("org.h2.expression.Wildcard");
			clazz = Class.forName("org.h2.index.BaseHashIndex");
			clazz = Class.forName("org.h2.index.BaseIndex");
			clazz = Class.forName("org.h2.index.BtreeIndex");
			clazz = Class.forName("org.h2.index.Cursor");
			clazz = Class.forName("org.h2.index.HashIndex");
			clazz = Class.forName("org.h2.index.Index");
			clazz = Class.forName("org.h2.index.IndexCondition");
			clazz = Class.forName("org.h2.index.IndexCursor");
			clazz = Class.forName("org.h2.index.IndexType");
			clazz = Class.forName("org.h2.index.MetaIndex");
			clazz = Class.forName("org.h2.index.MultiVersionCursor");
			clazz = Class.forName("org.h2.index.MultiVersionIndex");
			clazz = Class.forName("org.h2.index.NonUniqueHashIndex");
			clazz = Class.forName("org.h2.index.PageBtreeIndex");
			clazz = Class.forName("org.h2.index.PageDelegateIndex");
			clazz = Class.forName("org.h2.index.PageIndex");
			clazz = Class.forName("org.h2.index.RowIndex");
			clazz = Class.forName("org.h2.index.ScanCursor");
			clazz = Class.forName("org.h2.index.ScanIndex");
			clazz = Class.forName("org.h2.index.TreeCursor");
			clazz = Class.forName("org.h2.index.TreeIndex");
			clazz = Class.forName("org.h2.index.TreeNode");
			clazz = Class.forName("org.h2.index.ViewCursor");
			clazz = Class.forName("org.h2.index.ViewIndex");
			clazz = Class.forName("org.h2.index.ViewIndex$CostElement");
			clazz = Class.forName("org.h2.jdbc.JdbcBatchUpdateException");
			clazz = Class.forName("org.h2.jdbc.JdbcClob");
			clazz = Class.forName("org.h2.jdbc.JdbcConnection");
			clazz = Class.forName("org.h2.jdbc.JdbcPreparedStatement");
			clazz = Class.forName("org.h2.jdbc.JdbcResultSet");
			clazz = Class.forName("org.h2.jdbc.JdbcSQLException");
			clazz = Class.forName("org.h2.jdbc.JdbcStatement");
			clazz = Class.forName("org.h2.log.LogSystem");
			clazz = Class.forName("org.h2.log.UndoLog");
			clazz = Class.forName("org.h2.log.UndoLogRecord");
			clazz = Class.forName("org.h2.message.InternalException");
			clazz = Class.forName("org.h2.message.Message");
			clazz = Class.forName("org.h2.message.Trace");
			clazz = Class.forName("org.h2.message.TraceObject");
			clazz = Class.forName("org.h2.message.TraceSystem");
			clazz = Class.forName("org.h2.message.TraceWriter");
			clazz = Class.forName("org.h2.result.LocalResult");
			clazz = Class.forName("org.h2.result.ResultExternal");
			clazz = Class.forName("org.h2.result.ResultInterface");
			clazz = Class.forName("org.h2.result.Row");
			clazz = Class.forName("org.h2.result.RowList");
			clazz = Class.forName("org.h2.result.SearchRow");
			clazz = Class.forName("org.h2.result.SimpleRow");
			clazz = Class.forName("org.h2.result.SortOrder");
			clazz = Class.forName("org.h2.schema.Schema");
			clazz = Class.forName("org.h2.schema.SchemaObject");
			clazz = Class.forName("org.h2.schema.SchemaObjectBase");
			clazz = Class.forName("org.h2.schema.Sequence");
			clazz = Class.forName("org.h2.security.SHA256");
			clazz = Class.forName("org.h2.store.DataHandler");
			clazz = Class.forName("org.h2.store.FileLock");
			clazz = Class.forName("org.h2.store.Record");
			clazz = Class.forName("org.h2.store.RecordReader");
			clazz = Class.forName("org.h2.table.Column");
			clazz = Class.forName("org.h2.table.ColumnResolver");
			clazz = Class.forName("org.h2.table.FunctionTable");
			clazz = Class.forName("org.h2.table.IndexColumn");
			clazz = Class.forName("org.h2.table.MetaTable");
			clazz = Class.forName("org.h2.table.Plan");
			clazz = Class.forName("org.h2.table.PlanItem");
			clazz = Class.forName("org.h2.table.RangeTable");
			clazz = Class.forName("org.h2.table.SingleColumnResolver");
			clazz = Class.forName("org.h2.table.Table");
			clazz = Class.forName("org.h2.table.TableData");
			clazz = Class.forName("org.h2.table.TableData$1");
			clazz = Class.forName("org.h2.table.TableFilter");
			clazz = Class.forName("org.h2.table.TableView");
			clazz = Class.forName("org.h2.tools.RunScript");
			clazz = Class.forName("org.h2.util.AutoCloseInputStream");
			clazz = Class.forName("org.h2.util.BitField");
			clazz = Class.forName("org.h2.util.ByteUtils");
			clazz = Class.forName("org.h2.util.CacheObject");
			clazz = Class.forName("org.h2.util.CacheObject$CacheComparator");
			clazz = Class.forName("org.h2.util.ClassUtils");
			clazz = Class.forName("org.h2.util.HashBase");
			clazz = Class.forName("org.h2.util.IOUtils");
			clazz = Class.forName("org.h2.util.IntArray");
			clazz = Class.forName("org.h2.util.MathUtils");
			clazz = Class.forName("org.h2.util.MemoryUtils");
			clazz = Class.forName("org.h2.util.New");
			clazz = Class.forName("org.h2.util.ObjectArray");
			clazz = Class.forName("org.h2.util.ObjectArray$ObjectArrayIterator");
			clazz = Class.forName("org.h2.util.ObjectUtils");
			clazz = Class.forName("org.h2.util.Permutations");
			clazz = Class.forName("org.h2.util.RandomUtils");
			clazz = Class.forName("org.h2.util.RandomUtils$1");
			clazz = Class.forName("org.h2.util.Resources");
			clazz = Class.forName("org.h2.util.ScriptReader");
			clazz = Class.forName("org.h2.util.SmallLRUCache");
			clazz = Class.forName("org.h2.util.SortedProperties");
			clazz = Class.forName("org.h2.util.StatementBuilder");
			clazz = Class.forName("org.h2.util.StringCache");
			clazz = Class.forName("org.h2.util.StringUtils");
			clazz = Class.forName("org.h2.util.TempFileDeleter");
			clazz = Class.forName("org.h2.util.Tool");
			clazz = Class.forName("org.h2.util.ValueHashMap");
			clazz = Class.forName("org.h2.value.CompareMode");
			clazz = Class.forName("org.h2.value.DataType");
			clazz = Class.forName("org.h2.value.Transfer");
			clazz = Class.forName("org.h2.value.Value");
			clazz = Class.forName("org.h2.value.ValueArray");
			clazz = Class.forName("org.h2.value.ValueBoolean");
			clazz = Class.forName("org.h2.value.ValueByte");
			clazz = Class.forName("org.h2.value.ValueBytes");
			clazz = Class.forName("org.h2.value.ValueBytesBase");
			clazz = Class.forName("org.h2.value.ValueDate");
			clazz = Class.forName("org.h2.value.ValueDecimal");
			clazz = Class.forName("org.h2.value.ValueDouble");
			clazz = Class.forName("org.h2.value.ValueFloat");
			clazz = Class.forName("org.h2.value.ValueInt");
			clazz = Class.forName("org.h2.value.ValueJavaObject");
			clazz = Class.forName("org.h2.value.ValueLob");
			clazz = Class.forName("org.h2.value.ValueLong");
			clazz = Class.forName("org.h2.value.ValueNull");
			clazz = Class.forName("org.h2.value.ValueResultSet");
			clazz = Class.forName("org.h2.value.ValueShort");
			clazz = Class.forName("org.h2.value.ValueString");
			clazz = Class.forName("org.h2.value.ValueStringBase");
			clazz = Class.forName("org.h2.value.ValueStringFixed");
			clazz = Class.forName("org.h2.value.ValueStringIgnoreCase");
			clazz = Class.forName("org.h2.value.ValueTime");
			clazz = Class.forName("org.h2.value.ValueTimestamp");
			clazz = Class.forName("org.h2.value.ValueUuid");
			clazz = Class.forName("soot.rtlib.tamiflex.IUnexpectedReflectiveCallHandler");
			clazz = Class.forName("soot.rtlib.tamiflex.OpaquePredicate");
			clazz = Class.forName("soot.rtlib.tamiflex.ReflectiveCalls");
			clazz = Class.forName("soot.rtlib.tamiflex.ReflectiveCallsWrapper");
			clazz = Class.forName("soot.rtlib.tamiflex.SootSig");
			clazz = Class.forName("soot.rtlib.tamiflex.UnexpectedReflectiveCall");

		} catch (Exception ex ) {
			assert(false) : ex.toString();
		}
	}
	
	public static void premain(String args, Instrumentation inst) {
		System.out.println("Class Resolver Agent begin");

	}
}
