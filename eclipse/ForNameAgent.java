import java.lang.instrument.Instrumentation;

public class ForNameAgent extends ClassLoader {
	
	static {
		try {
			
			Class clazz;

			clazz = Class.forName("Harness");
			clazz = Class.forName("org.dacapo.eclipse.Activator");
			clazz = Class.forName("org.dacapo.eclipse.BenchmarkRunner");
			clazz = Class.forName("org.dacapo.harness.Benchmark");
			clazz = Class.forName("org.dacapo.harness.Callback");
			clazz = Class.forName("org.dacapo.harness.Callback$1");
			clazz = Class.forName("org.dacapo.harness.Callback$Mode");
			clazz = Class.forName("org.dacapo.harness.CommandLineArgs");
			clazz = Class.forName("org.dacapo.harness.CommandLineArgs$Methodology");
			clazz = Class.forName("org.dacapo.harness.DacapoClassLoader");
			clazz = Class.forName("org.dacapo.harness.DacapoException");
			clazz = Class.forName("org.dacapo.harness.Digest");
			clazz = Class.forName("org.dacapo.harness.Eclipse");
			clazz = Class.forName("org.dacapo.harness.FileDigest");
			clazz = Class.forName("org.dacapo.harness.TeeOutputStream");
			clazz = Class.forName("org.dacapo.harness.TeePrintStream");
			clazz = Class.forName("org.dacapo.harness.TestHarness");
			clazz = Class.forName("org.dacapo.parser.Config");
			clazz = Class.forName("org.dacapo.parser.Config$OutputFile");
			clazz = Class.forName("org.dacapo.parser.Config$Size");
			clazz = Class.forName("org.dacapo.parser.Config$ThreadModel");
			clazz = Class.forName("org.dacapo.parser.ConfigFile");
			clazz = Class.forName("org.dacapo.parser.ConfigFileConstants");
			clazz = Class.forName("org.dacapo.parser.ConfigFileTokenManager");
			clazz = Class.forName("org.dacapo.parser.ParseException");
			clazz = Class.forName("org.dacapo.parser.SimpleCharStream");
			clazz = Class.forName("org.dacapo.parser.Token");
			clazz = Class.forName("org.dacapo.parser.TokenMgrError");
			clazz = Class.forName("org.eclipse.core.filesystem.EFS");
			clazz = Class.forName("org.eclipse.core.filesystem.IFileInfo");
			clazz = Class.forName("org.eclipse.core.filesystem.IFileStore");
			clazz = Class.forName("org.eclipse.core.filesystem.IFileSystem");
			clazz = Class.forName("org.eclipse.core.filesystem.URIUtil");
			clazz = Class.forName("org.eclipse.core.filesystem.provider.FileInfo");
			clazz = Class.forName("org.eclipse.core.filesystem.provider.FileStore");
			clazz = Class.forName("org.eclipse.core.filesystem.provider.FileSystem");
			clazz = Class.forName("org.eclipse.core.internal.adapter.AdapterManagerListener");
			clazz = Class.forName("org.eclipse.core.internal.boot.PlatformURLBaseConnection");
			clazz = Class.forName("org.eclipse.core.internal.boot.PlatformURLConnection");
			clazz = Class.forName("org.eclipse.core.internal.boot.PlatformURLHandler");
			clazz = Class.forName("org.eclipse.core.internal.content.Activator");
			clazz = Class.forName("org.eclipse.core.internal.content.BasicDescription");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentDescription");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentType");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeBuilder");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeBuilder$1");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeCatalog");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeCatalog$1");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeCatalog$2");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeCatalog$3");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeCatalog$4");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeCatalog$5");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeCatalog$6");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeCatalog$7");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeHandler");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeManager");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeMatcher");
			clazz = Class.forName("org.eclipse.core.internal.content.ContentTypeVisitor");
			clazz = Class.forName("org.eclipse.core.internal.content.DefaultDescription");
			clazz = Class.forName("org.eclipse.core.internal.content.FileSpec");
			clazz = Class.forName("org.eclipse.core.internal.content.IContentTypeInfo");
			clazz = Class.forName("org.eclipse.core.internal.content.ILazySource");
			clazz = Class.forName("org.eclipse.core.internal.content.LazyInputStream");
			clazz = Class.forName("org.eclipse.core.internal.content.LowLevelIOException");
			clazz = Class.forName("org.eclipse.core.internal.content.TextContentDescriber");
			clazz = Class.forName("org.eclipse.core.internal.content.Util");
			clazz = Class.forName("org.eclipse.core.internal.dtree.AbstractDataTree");
			clazz = Class.forName("org.eclipse.core.internal.dtree.AbstractDataTreeNode");
			clazz = Class.forName("org.eclipse.core.internal.dtree.DataDeltaNode");
			clazz = Class.forName("org.eclipse.core.internal.dtree.DataTreeLookup");
			clazz = Class.forName("org.eclipse.core.internal.dtree.DataTreeNode");
			clazz = Class.forName("org.eclipse.core.internal.dtree.DataTreeReader");
			clazz = Class.forName("org.eclipse.core.internal.dtree.DataTreeWriter");
			clazz = Class.forName("org.eclipse.core.internal.dtree.DeletedNode");
			clazz = Class.forName("org.eclipse.core.internal.dtree.DeltaDataTree");
			clazz = Class.forName("org.eclipse.core.internal.dtree.IComparator");
			clazz = Class.forName("org.eclipse.core.internal.dtree.IDataFlattener");
			clazz = Class.forName("org.eclipse.core.internal.dtree.NoDataDeltaNode");
			clazz = Class.forName("org.eclipse.core.internal.dtree.NodeComparison");
			clazz = Class.forName("org.eclipse.core.internal.dtree.ObjectNotFoundException");
			clazz = Class.forName("org.eclipse.core.internal.events.AutoBuildJob");
			clazz = Class.forName("org.eclipse.core.internal.events.BuildCommand");
			clazz = Class.forName("org.eclipse.core.internal.events.BuildManager");
			clazz = Class.forName("org.eclipse.core.internal.events.BuildManager$1");
			clazz = Class.forName("org.eclipse.core.internal.events.BuildManager$2");
			clazz = Class.forName("org.eclipse.core.internal.events.BuildManager$DeltaCache");
			clazz = Class.forName("org.eclipse.core.internal.events.BuildManager$MissingBuilder");
			clazz = Class.forName("org.eclipse.core.internal.events.BuilderPersistentInfo");
			clazz = Class.forName("org.eclipse.core.internal.events.ILifecycleListener");
			clazz = Class.forName("org.eclipse.core.internal.events.InternalBuilder");
			clazz = Class.forName("org.eclipse.core.internal.events.LifecycleEvent");
			clazz = Class.forName("org.eclipse.core.internal.events.NodeIDMap");
			clazz = Class.forName("org.eclipse.core.internal.events.NotificationManager");
			clazz = Class.forName("org.eclipse.core.internal.events.NotificationManager$1");
			clazz = Class.forName("org.eclipse.core.internal.events.NotificationManager$2");
			clazz = Class.forName("org.eclipse.core.internal.events.NotificationManager$NotifyJob");
			clazz = Class.forName("org.eclipse.core.internal.events.ResourceChangeEvent");
			clazz = Class.forName("org.eclipse.core.internal.events.ResourceChangeListenerList");
			clazz = Class.forName("org.eclipse.core.internal.events.ResourceChangeListenerList$ListenerEntry");
			clazz = Class.forName("org.eclipse.core.internal.events.ResourceComparator");
			clazz = Class.forName("org.eclipse.core.internal.events.ResourceDelta");
			clazz = Class.forName("org.eclipse.core.internal.events.ResourceDeltaFactory");
			clazz = Class.forName("org.eclipse.core.internal.events.ResourceDeltaInfo");
			clazz = Class.forName("org.eclipse.core.internal.events.ResourceStats");
			clazz = Class.forName("org.eclipse.core.internal.filesystem.Activator");
			clazz = Class.forName("org.eclipse.core.internal.filesystem.InternalFileSystemCore");
			clazz = Class.forName("org.eclipse.core.internal.filesystem.Messages");
			clazz = Class.forName("org.eclipse.core.internal.filesystem.Policy");
			clazz = Class.forName("org.eclipse.core.internal.filesystem.local.InfiniteProgress");
			clazz = Class.forName("org.eclipse.core.internal.filesystem.local.LocalFile");
			clazz = Class.forName("org.eclipse.core.internal.filesystem.local.LocalFileNatives");
			clazz = Class.forName("org.eclipse.core.internal.filesystem.local.LocalFileSystem");
			clazz = Class.forName("org.eclipse.core.internal.jobs.Deadlock");
			clazz = Class.forName("org.eclipse.core.internal.jobs.DeadlockDetector");
			clazz = Class.forName("org.eclipse.core.internal.jobs.ImplicitJobs");
			clazz = Class.forName("org.eclipse.core.internal.jobs.InternalJob");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobActivator");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobChangeEvent");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobListeners");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobListeners$1");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobListeners$2");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobListeners$3");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobListeners$4");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobListeners$5");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobListeners$6");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobListeners$IListenerDoit");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobManager");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobManager$1");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobManager$2");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobMessages");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobOSGiUtils");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobQueue");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobQueue$1");
			clazz = Class.forName("org.eclipse.core.internal.jobs.JobStatus");
			clazz = Class.forName("org.eclipse.core.internal.jobs.LockManager");
			clazz = Class.forName("org.eclipse.core.internal.jobs.OrderedLock");
			clazz = Class.forName("org.eclipse.core.internal.jobs.Queue");
			clazz = Class.forName("org.eclipse.core.internal.jobs.Semaphore");
			clazz = Class.forName("org.eclipse.core.internal.jobs.ThreadJob");
			clazz = Class.forName("org.eclipse.core.internal.jobs.Worker");
			clazz = Class.forName("org.eclipse.core.internal.jobs.WorkerPool");
			clazz = Class.forName("org.eclipse.core.internal.localstore.BlobStore");
			clazz = Class.forName("org.eclipse.core.internal.localstore.Bucket");
			clazz = Class.forName("org.eclipse.core.internal.localstore.Bucket$Entry");
			clazz = Class.forName("org.eclipse.core.internal.localstore.Bucket$Visitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.BucketTree");
			clazz = Class.forName("org.eclipse.core.internal.localstore.CollectSyncStatusVisitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.CopyVisitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.DeleteVisitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.FileStoreRoot");
			clazz = Class.forName("org.eclipse.core.internal.localstore.FileSystemResourceManager");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryBucket");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryBucket$HistoryEntry");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryStore2");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryStore2$1");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryStore2$2");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryStore2$3");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryStore2$4");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryStore2$5");
			clazz = Class.forName("org.eclipse.core.internal.localstore.HistoryStore2$HistoryCopyVisitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.IHistoryStore");
			clazz = Class.forName("org.eclipse.core.internal.localstore.ILocalStoreConstants");
			clazz = Class.forName("org.eclipse.core.internal.localstore.IUnifiedTreeVisitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.IsSynchronizedVisitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.IsSynchronizedVisitor$ResourceChangedException");
			clazz = Class.forName("org.eclipse.core.internal.localstore.RefreshLocalAliasVisitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.RefreshLocalVisitor");
			clazz = Class.forName("org.eclipse.core.internal.localstore.SafeChunkyInputStream");
			clazz = Class.forName("org.eclipse.core.internal.localstore.SafeChunkyOutputStream");
			clazz = Class.forName("org.eclipse.core.internal.localstore.SafeFileInputStream");
			clazz = Class.forName("org.eclipse.core.internal.localstore.SafeFileOutputStream");
			clazz = Class.forName("org.eclipse.core.internal.localstore.UnifiedTree");
			clazz = Class.forName("org.eclipse.core.internal.localstore.UnifiedTreeNode");
			clazz = Class.forName("org.eclipse.core.internal.preferences.AbstractScope");
			clazz = Class.forName("org.eclipse.core.internal.preferences.Activator");
			clazz = Class.forName("org.eclipse.core.internal.preferences.ConfigurationPreferences");
			clazz = Class.forName("org.eclipse.core.internal.preferences.DefaultPreferences");
			clazz = Class.forName("org.eclipse.core.internal.preferences.EclipsePreferences");
			clazz = Class.forName("org.eclipse.core.internal.preferences.EclipsePreferences$1");
			clazz = Class.forName("org.eclipse.core.internal.preferences.EclipsePreferences$2");
			clazz = Class.forName("org.eclipse.core.internal.preferences.ImmutableMap");
			clazz = Class.forName("org.eclipse.core.internal.preferences.ImmutableMap$ArrayMap");
			clazz = Class.forName("org.eclipse.core.internal.preferences.ImmutableMap$EmptyMap");
			clazz = Class.forName("org.eclipse.core.internal.preferences.InstancePreferences");
			clazz = Class.forName("org.eclipse.core.internal.preferences.OSGiPreferencesServiceManager");
			clazz = Class.forName("org.eclipse.core.internal.preferences.PreferenceServiceRegistryHelper");
			clazz = Class.forName("org.eclipse.core.internal.preferences.PreferencesOSGiUtils");
			clazz = Class.forName("org.eclipse.core.internal.preferences.PreferencesService");
			clazz = Class.forName("org.eclipse.core.internal.preferences.PreferencesService$5");
			clazz = Class.forName("org.eclipse.core.internal.preferences.RootPreferences");
			clazz = Class.forName("org.eclipse.core.internal.preferences.StringPool");
			clazz = Class.forName("org.eclipse.core.internal.preferences.exchange.ILegacyPreferences");
			clazz = Class.forName("org.eclipse.core.internal.preferences.exchange.IProductPreferencesService");
			clazz = Class.forName("org.eclipse.core.internal.preferences.legacy.PreferenceForwarder");
			clazz = Class.forName("org.eclipse.core.internal.preferences.legacy.ProductPreferencesService");
			clazz = Class.forName("org.eclipse.core.internal.properties.IPropertyManager");
			clazz = Class.forName("org.eclipse.core.internal.properties.PropertyBucket");
			clazz = Class.forName("org.eclipse.core.internal.properties.PropertyBucket$1");
			clazz = Class.forName("org.eclipse.core.internal.properties.PropertyBucket$PropertyEntry");
			clazz = Class.forName("org.eclipse.core.internal.properties.PropertyManager2");
			clazz = Class.forName("org.eclipse.core.internal.properties.PropertyManager2$1");
			clazz = Class.forName("org.eclipse.core.internal.properties.PropertyManager2$2");
			clazz = Class.forName("org.eclipse.core.internal.properties.PropertyManager2$PropertyCopyVisitor");
			clazz = Class.forName("org.eclipse.core.internal.refresh.MonitorManager");
			clazz = Class.forName("org.eclipse.core.internal.refresh.PollingMonitor");
			clazz = Class.forName("org.eclipse.core.internal.refresh.RefreshJob");
			clazz = Class.forName("org.eclipse.core.internal.refresh.RefreshManager");
			clazz = Class.forName("org.eclipse.core.internal.registry.BaseExtensionHandle");
			clazz = Class.forName("org.eclipse.core.internal.registry.BaseExtensionPointHandle");
			clazz = Class.forName("org.eclipse.core.internal.registry.BufferedRandomInputStream");
			clazz = Class.forName("org.eclipse.core.internal.registry.CombinedEventDelta");
			clazz = Class.forName("org.eclipse.core.internal.registry.ConfigurationElement");
			clazz = Class.forName("org.eclipse.core.internal.registry.ConfigurationElementHandle");
			clazz = Class.forName("org.eclipse.core.internal.registry.Contribution");
			clazz = Class.forName("org.eclipse.core.internal.registry.Extension");
			clazz = Class.forName("org.eclipse.core.internal.registry.ExtensionHandle");
			clazz = Class.forName("org.eclipse.core.internal.registry.ExtensionPoint");
			clazz = Class.forName("org.eclipse.core.internal.registry.ExtensionPointHandle");
			clazz = Class.forName("org.eclipse.core.internal.registry.ExtensionRegistry");
			clazz = Class.forName("org.eclipse.core.internal.registry.ExtensionRegistry$ListenerInfo");
			clazz = Class.forName("org.eclipse.core.internal.registry.ExtensionsParser");
			clazz = Class.forName("org.eclipse.core.internal.registry.Handle");
			clazz = Class.forName("org.eclipse.core.internal.registry.HashtableOfInt");
			clazz = Class.forName("org.eclipse.core.internal.registry.HashtableOfStringAndInt");
			clazz = Class.forName("org.eclipse.core.internal.registry.IObjectManager");
			clazz = Class.forName("org.eclipse.core.internal.registry.KeyedElement");
			clazz = Class.forName("org.eclipse.core.internal.registry.KeyedHashSet");
			clazz = Class.forName("org.eclipse.core.internal.registry.ReadWriteMonitor");
			clazz = Class.forName("org.eclipse.core.internal.registry.ReferenceMap");
			clazz = Class.forName("org.eclipse.core.internal.registry.ReferenceMap$IEntry");
			clazz = Class.forName("org.eclipse.core.internal.registry.ReferenceMap$SoftRef");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryIndexChildren");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryIndexElement");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryMessages");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryObject");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryObjectFactory");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryObjectManager");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryProperties");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryProperties$1");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryProviderFactory");
			clazz = Class.forName("org.eclipse.core.internal.registry.RegistryTimestamp");
			clazz = Class.forName("org.eclipse.core.internal.registry.TableReader");
			clazz = Class.forName("org.eclipse.core.internal.registry.TableWriter");
			clazz = Class.forName("org.eclipse.core.internal.registry.TemporaryObjectManager");
			clazz = Class.forName("org.eclipse.core.internal.registry.ThirdLevelConfigurationElementHandle");
			clazz = Class.forName("org.eclipse.core.internal.registry.osgi.Activator");
			clazz = Class.forName("org.eclipse.core.internal.registry.osgi.EclipseBundleListener");
			clazz = Class.forName("org.eclipse.core.internal.registry.osgi.EquinoxRegistryStrategy");
			clazz = Class.forName("org.eclipse.core.internal.registry.osgi.EquinoxUtils");
			clazz = Class.forName("org.eclipse.core.internal.registry.osgi.OSGIUtils");
			clazz = Class.forName("org.eclipse.core.internal.registry.osgi.RegistryCommandProvider");
			clazz = Class.forName("org.eclipse.core.internal.registry.osgi.RegistryProviderOSGI");
			clazz = Class.forName("org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI");
			clazz = Class.forName("org.eclipse.core.internal.resources.AliasManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.AliasManager$1");
			clazz = Class.forName("org.eclipse.core.internal.resources.AliasManager$AddToCollectionDoit");
			clazz = Class.forName("org.eclipse.core.internal.resources.AliasManager$Doit");
			clazz = Class.forName("org.eclipse.core.internal.resources.AliasManager$FindAliasesDoit");
			clazz = Class.forName("org.eclipse.core.internal.resources.AliasManager$LocationMap");
			clazz = Class.forName("org.eclipse.core.internal.resources.CharsetDeltaJob");
			clazz = Class.forName("org.eclipse.core.internal.resources.CharsetDeltaJob$ICharsetListenerFilter");
			clazz = Class.forName("org.eclipse.core.internal.resources.CharsetManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.CharsetManager$CharsetManagerJob");
			clazz = Class.forName("org.eclipse.core.internal.resources.CharsetManager$Listener");
			clazz = Class.forName("org.eclipse.core.internal.resources.ComputeProjectOrder");
			clazz = Class.forName("org.eclipse.core.internal.resources.ComputeProjectOrder$Digraph");
			clazz = Class.forName("org.eclipse.core.internal.resources.ComputeProjectOrder$Digraph$Vertex");
			clazz = Class.forName("org.eclipse.core.internal.resources.Container");
			clazz = Class.forName("org.eclipse.core.internal.resources.ContentDescriptionManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.ContentDescriptionManager$1");
			clazz = Class.forName("org.eclipse.core.internal.resources.ContentDescriptionManager$FlushJob");
			clazz = Class.forName("org.eclipse.core.internal.resources.ContentDescriptionManager$LazyFileInputStream");
			clazz = Class.forName("org.eclipse.core.internal.resources.DelayedSnapshotJob");
			clazz = Class.forName("org.eclipse.core.internal.resources.File");
			clazz = Class.forName("org.eclipse.core.internal.resources.Folder");
			clazz = Class.forName("org.eclipse.core.internal.resources.ICoreConstants");
			clazz = Class.forName("org.eclipse.core.internal.resources.IManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.IMarkerSetElement");
			clazz = Class.forName("org.eclipse.core.internal.resources.IModelObjectConstants");
			clazz = Class.forName("org.eclipse.core.internal.resources.InternalTeamHook");
			clazz = Class.forName("org.eclipse.core.internal.resources.InternalWorkspaceJob");
			clazz = Class.forName("org.eclipse.core.internal.resources.LocalMetaArea");
			clazz = Class.forName("org.eclipse.core.internal.resources.LocationValidator");
			clazz = Class.forName("org.eclipse.core.internal.resources.Marker");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerAttributeMap");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerDelta");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerDeltaManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerInfo");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerManager$2");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerManager$3");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerManager$4");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerReader");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerReader_1");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerReader_2");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerReader_3");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerSet");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerTypeDefinitionCache");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerTypeDefinitionCache$MarkerTypeDefinition");
			clazz = Class.forName("org.eclipse.core.internal.resources.MarkerWriter");
			clazz = Class.forName("org.eclipse.core.internal.resources.ModelObject");
			clazz = Class.forName("org.eclipse.core.internal.resources.ModelObjectWriter");
			clazz = Class.forName("org.eclipse.core.internal.resources.MoveDeleteHook");
			clazz = Class.forName("org.eclipse.core.internal.resources.NatureManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.NatureManager$1");
			clazz = Class.forName("org.eclipse.core.internal.resources.OS");
			clazz = Class.forName("org.eclipse.core.internal.resources.PathVariableManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.PlatformURLResourceConnection");
			clazz = Class.forName("org.eclipse.core.internal.resources.PreferenceInitializer");
			clazz = Class.forName("org.eclipse.core.internal.resources.Project");
			clazz = Class.forName("org.eclipse.core.internal.resources.ProjectContentTypes");
			clazz = Class.forName("org.eclipse.core.internal.resources.ProjectContentTypes$ProjectContentTypeSelectionPolicy");
			clazz = Class.forName("org.eclipse.core.internal.resources.ProjectDescription");
			clazz = Class.forName("org.eclipse.core.internal.resources.ProjectDescriptionReader");
			clazz = Class.forName("org.eclipse.core.internal.resources.ProjectInfo");
			clazz = Class.forName("org.eclipse.core.internal.resources.ProjectNatureDescriptor");
			clazz = Class.forName("org.eclipse.core.internal.resources.ProjectPreferences");
			clazz = Class.forName("org.eclipse.core.internal.resources.ProjectPreferences$SortedProperties");
			clazz = Class.forName("org.eclipse.core.internal.resources.Resource");
			clazz = Class.forName("org.eclipse.core.internal.resources.Resource$1");
			clazz = Class.forName("org.eclipse.core.internal.resources.ResourceException");
			clazz = Class.forName("org.eclipse.core.internal.resources.ResourceInfo");
			clazz = Class.forName("org.eclipse.core.internal.resources.ResourceProxy");
			clazz = Class.forName("org.eclipse.core.internal.resources.ResourceStatus");
			clazz = Class.forName("org.eclipse.core.internal.resources.ResourceTree");
			clazz = Class.forName("org.eclipse.core.internal.resources.ResourcesCompatibilityHelper");
			clazz = Class.forName("org.eclipse.core.internal.resources.RootInfo");
			clazz = Class.forName("org.eclipse.core.internal.resources.Rules");
			clazz = Class.forName("org.eclipse.core.internal.resources.Rules$1");
			clazz = Class.forName("org.eclipse.core.internal.resources.SafeFileTable");
			clazz = Class.forName("org.eclipse.core.internal.resources.SaveContext");
			clazz = Class.forName("org.eclipse.core.internal.resources.SaveManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.SaveManager$1");
			clazz = Class.forName("org.eclipse.core.internal.resources.SaveManager$3");
			clazz = Class.forName("org.eclipse.core.internal.resources.SaveManager$4");
			clazz = Class.forName("org.eclipse.core.internal.resources.SaveManager$InternalMonitorWrapper");
			clazz = Class.forName("org.eclipse.core.internal.resources.SyncInfoWriter");
			clazz = Class.forName("org.eclipse.core.internal.resources.Synchronizer");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkManager");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkManager$NotifyRule");
			clazz = Class.forName("org.eclipse.core.internal.resources.Workspace");
			clazz = Class.forName("org.eclipse.core.internal.resources.Workspace$1");
			clazz = Class.forName("org.eclipse.core.internal.resources.Workspace$2");
			clazz = Class.forName("org.eclipse.core.internal.resources.Workspace$3");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkspaceDescription");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkspaceDescriptionReader");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkspacePreferences");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkspacePreferences$1");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkspaceRoot");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkspaceTreeReader");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkspaceTreeReader_1");
			clazz = Class.forName("org.eclipse.core.internal.resources.WorkspaceTreeReader_2");
			clazz = Class.forName("org.eclipse.core.internal.resources.XMLWriter");
			clazz = Class.forName("org.eclipse.core.internal.runtime.Activator");
			clazz = Class.forName("org.eclipse.core.internal.runtime.AdapterManager");
			clazz = Class.forName("org.eclipse.core.internal.runtime.CommonMessages");
			clazz = Class.forName("org.eclipse.core.internal.runtime.CompatibilityHelper");
			clazz = Class.forName("org.eclipse.core.internal.runtime.DataArea");
			clazz = Class.forName("org.eclipse.core.internal.runtime.FindSupport");
			clazz = Class.forName("org.eclipse.core.internal.runtime.IAdapterManagerProvider");
			clazz = Class.forName("org.eclipse.core.internal.runtime.InternalPlatform");
			clazz = Class.forName("org.eclipse.core.internal.runtime.LocalizationUtils");
			clazz = Class.forName("org.eclipse.core.internal.runtime.Log");
			clazz = Class.forName("org.eclipse.core.internal.runtime.Messages");
			clazz = Class.forName("org.eclipse.core.internal.runtime.MetaDataKeeper");
			clazz = Class.forName("org.eclipse.core.internal.runtime.PlatformActivator");
			clazz = Class.forName("org.eclipse.core.internal.runtime.PlatformLogWriter");
			clazz = Class.forName("org.eclipse.core.internal.runtime.PlatformURLConfigConnection");
			clazz = Class.forName("org.eclipse.core.internal.runtime.PlatformURLConverter");
			clazz = Class.forName("org.eclipse.core.internal.runtime.PlatformURLFragmentConnection");
			clazz = Class.forName("org.eclipse.core.internal.runtime.PlatformURLMetaConnection");
			clazz = Class.forName("org.eclipse.core.internal.runtime.PlatformURLPluginConnection");
			clazz = Class.forName("org.eclipse.core.internal.runtime.ResourceTranslator");
			clazz = Class.forName("org.eclipse.core.internal.runtime.RuntimeLog");
			clazz = Class.forName("org.eclipse.core.internal.utils.BitMask");
			clazz = Class.forName("org.eclipse.core.internal.utils.Cache");
			clazz = Class.forName("org.eclipse.core.internal.utils.FileUtil");
			clazz = Class.forName("org.eclipse.core.internal.utils.IStringPoolParticipant");
			clazz = Class.forName("org.eclipse.core.internal.utils.KeyedHashSet");
			clazz = Class.forName("org.eclipse.core.internal.utils.KeyedHashSet$KeyedElement");
			clazz = Class.forName("org.eclipse.core.internal.utils.Messages");
			clazz = Class.forName("org.eclipse.core.internal.utils.ObjectMap");
			clazz = Class.forName("org.eclipse.core.internal.utils.Policy");
			clazz = Class.forName("org.eclipse.core.internal.utils.Queue");
			clazz = Class.forName("org.eclipse.core.internal.utils.StringPool");
			clazz = Class.forName("org.eclipse.core.internal.utils.StringPoolJob");
			clazz = Class.forName("org.eclipse.core.internal.utils.StringPoolJob$1");
			clazz = Class.forName("org.eclipse.core.internal.utils.WrappedRuntimeException");
			clazz = Class.forName("org.eclipse.core.internal.watson.ElementTree");
			clazz = Class.forName("org.eclipse.core.internal.watson.ElementTree$ChildIDsCache");
			clazz = Class.forName("org.eclipse.core.internal.watson.ElementTreeIterator");
			clazz = Class.forName("org.eclipse.core.internal.watson.ElementTreeReader");
			clazz = Class.forName("org.eclipse.core.internal.watson.ElementTreeReader$1");
			clazz = Class.forName("org.eclipse.core.internal.watson.ElementTreeReaderImpl_1");
			clazz = Class.forName("org.eclipse.core.internal.watson.ElementTreeWriter");
			clazz = Class.forName("org.eclipse.core.internal.watson.ElementTreeWriter$1");
			clazz = Class.forName("org.eclipse.core.internal.watson.IElementComparator");
			clazz = Class.forName("org.eclipse.core.internal.watson.IElementContentVisitor");
			clazz = Class.forName("org.eclipse.core.internal.watson.IElementInfoFlattener");
			clazz = Class.forName("org.eclipse.core.internal.watson.IElementTreeData");
			clazz = Class.forName("org.eclipse.core.internal.watson.IPathRequestor");
			clazz = Class.forName("org.eclipse.core.resources.ICommand");
			clazz = Class.forName("org.eclipse.core.resources.IContainer");
			clazz = Class.forName("org.eclipse.core.resources.IEncodedStorage");
			clazz = Class.forName("org.eclipse.core.resources.IFile");
			clazz = Class.forName("org.eclipse.core.resources.IFileState");
			clazz = Class.forName("org.eclipse.core.resources.IFolder");
			clazz = Class.forName("org.eclipse.core.resources.IMarker");
			clazz = Class.forName("org.eclipse.core.resources.IMarkerDelta");
			clazz = Class.forName("org.eclipse.core.resources.IPathVariableChangeListener");
			clazz = Class.forName("org.eclipse.core.resources.IPathVariableManager");
			clazz = Class.forName("org.eclipse.core.resources.IProject");
			clazz = Class.forName("org.eclipse.core.resources.IProjectDescription");
			clazz = Class.forName("org.eclipse.core.resources.IProjectNature");
			clazz = Class.forName("org.eclipse.core.resources.IProjectNatureDescriptor");
			clazz = Class.forName("org.eclipse.core.resources.IResource");
			clazz = Class.forName("org.eclipse.core.resources.IResourceChangeEvent");
			clazz = Class.forName("org.eclipse.core.resources.IResourceChangeListener");
			clazz = Class.forName("org.eclipse.core.resources.IResourceDelta");
			clazz = Class.forName("org.eclipse.core.resources.IResourceDeltaVisitor");
			clazz = Class.forName("org.eclipse.core.resources.IResourceProxy");
			clazz = Class.forName("org.eclipse.core.resources.IResourceProxyVisitor");
			clazz = Class.forName("org.eclipse.core.resources.IResourceRuleFactory");
			clazz = Class.forName("org.eclipse.core.resources.IResourceStatus");
			clazz = Class.forName("org.eclipse.core.resources.IResourceVisitor");
			clazz = Class.forName("org.eclipse.core.resources.ISaveContext");
			clazz = Class.forName("org.eclipse.core.resources.ISaveParticipant");
			clazz = Class.forName("org.eclipse.core.resources.ISavedState");
			clazz = Class.forName("org.eclipse.core.resources.IStorage");
			clazz = Class.forName("org.eclipse.core.resources.ISynchronizer");
			clazz = Class.forName("org.eclipse.core.resources.IWorkspace");
			clazz = Class.forName("org.eclipse.core.resources.IWorkspace$ProjectOrder");
			clazz = Class.forName("org.eclipse.core.resources.IWorkspaceDescription");
			clazz = Class.forName("org.eclipse.core.resources.IWorkspaceRoot");
			clazz = Class.forName("org.eclipse.core.resources.IWorkspaceRunnable");
			clazz = Class.forName("org.eclipse.core.resources.IncrementalProjectBuilder");
			clazz = Class.forName("org.eclipse.core.resources.ProjectScope");
			clazz = Class.forName("org.eclipse.core.resources.ResourceAttributes");
			clazz = Class.forName("org.eclipse.core.resources.ResourcesPlugin");
			clazz = Class.forName("org.eclipse.core.resources.WorkspaceJob");
			clazz = Class.forName("org.eclipse.core.resources.refresh.IRefreshMonitor");
			clazz = Class.forName("org.eclipse.core.resources.refresh.IRefreshResult");
			clazz = Class.forName("org.eclipse.core.resources.team.FileModificationValidationContext");
			clazz = Class.forName("org.eclipse.core.resources.team.IMoveDeleteHook");
			clazz = Class.forName("org.eclipse.core.resources.team.IResourceTree");
			clazz = Class.forName("org.eclipse.core.resources.team.ResourceRuleFactory");
			clazz = Class.forName("org.eclipse.core.resources.team.TeamHook");
			clazz = Class.forName("org.eclipse.core.runtime.Assert");
			clazz = Class.forName("org.eclipse.core.runtime.AssertionFailedException");
			clazz = Class.forName("org.eclipse.core.runtime.ContributorFactoryOSGi");
			clazz = Class.forName("org.eclipse.core.runtime.CoreException");
			clazz = Class.forName("org.eclipse.core.runtime.FileLocator");
			clazz = Class.forName("org.eclipse.core.runtime.IAdaptable");
			clazz = Class.forName("org.eclipse.core.runtime.IAdapterFactory");
			clazz = Class.forName("org.eclipse.core.runtime.IAdapterManager");
			clazz = Class.forName("org.eclipse.core.runtime.IConfigurationElement");
			clazz = Class.forName("org.eclipse.core.runtime.IContributor");
			clazz = Class.forName("org.eclipse.core.runtime.IExecutableExtension");
			clazz = Class.forName("org.eclipse.core.runtime.IExecutableExtensionFactory");
			clazz = Class.forName("org.eclipse.core.runtime.IExtension");
			clazz = Class.forName("org.eclipse.core.runtime.IExtensionDelta");
			clazz = Class.forName("org.eclipse.core.runtime.IExtensionPoint");
			clazz = Class.forName("org.eclipse.core.runtime.IExtensionRegistry");
			clazz = Class.forName("org.eclipse.core.runtime.ILog");
			clazz = Class.forName("org.eclipse.core.runtime.ILogListener");
			clazz = Class.forName("org.eclipse.core.runtime.IPath");
			clazz = Class.forName("org.eclipse.core.runtime.IProgressMonitor");
			clazz = Class.forName("org.eclipse.core.runtime.IProgressMonitorWithBlocking");
			clazz = Class.forName("org.eclipse.core.runtime.IRegistryChangeListener");
			clazz = Class.forName("org.eclipse.core.runtime.IRegistryEventListener");
			clazz = Class.forName("org.eclipse.core.runtime.ISafeRunnable");
			clazz = Class.forName("org.eclipse.core.runtime.IStatus");
			clazz = Class.forName("org.eclipse.core.runtime.InvalidRegistryObjectException");
			clazz = Class.forName("org.eclipse.core.runtime.ListenerList");
			clazz = Class.forName("org.eclipse.core.runtime.MultiStatus");
			clazz = Class.forName("org.eclipse.core.runtime.NullProgressMonitor");
			clazz = Class.forName("org.eclipse.core.runtime.OperationCanceledException");
			clazz = Class.forName("org.eclipse.core.runtime.Path");
			clazz = Class.forName("org.eclipse.core.runtime.PerformanceStats");
			clazz = Class.forName("org.eclipse.core.runtime.Platform");
			clazz = Class.forName("org.eclipse.core.runtime.PlatformObject");
			clazz = Class.forName("org.eclipse.core.runtime.Plugin");
			clazz = Class.forName("org.eclipse.core.runtime.Plugin$1");
			clazz = Class.forName("org.eclipse.core.runtime.Plugin$2");
			clazz = Class.forName("org.eclipse.core.runtime.Preferences");
			clazz = Class.forName("org.eclipse.core.runtime.Preferences$1");
			clazz = Class.forName("org.eclipse.core.runtime.Preferences$IPropertyChangeListener");
			clazz = Class.forName("org.eclipse.core.runtime.Preferences$PropertyChangeEvent");
			clazz = Class.forName("org.eclipse.core.runtime.ProgressMonitorWrapper");
			clazz = Class.forName("org.eclipse.core.runtime.QualifiedName");
			clazz = Class.forName("org.eclipse.core.runtime.RegistryFactory");
			clazz = Class.forName("org.eclipse.core.runtime.SafeRunner");
			clazz = Class.forName("org.eclipse.core.runtime.Status");
			clazz = Class.forName("org.eclipse.core.runtime.SubProgressMonitor");
			clazz = Class.forName("org.eclipse.core.runtime.adaptor.EclipseLog");
			clazz = Class.forName("org.eclipse.core.runtime.adaptor.EclipseStarter");
			clazz = Class.forName("org.eclipse.core.runtime.adaptor.EclipseStarter$InitialBundle");
			clazz = Class.forName("org.eclipse.core.runtime.adaptor.EclipseStarter$StartupEventListener");
			clazz = Class.forName("org.eclipse.core.runtime.adaptor.LocationManager");
			clazz = Class.forName("org.eclipse.core.runtime.content.IContentDescriber");
			clazz = Class.forName("org.eclipse.core.runtime.content.IContentDescription");
			clazz = Class.forName("org.eclipse.core.runtime.content.IContentType");
			clazz = Class.forName("org.eclipse.core.runtime.content.IContentTypeManager");
			clazz = Class.forName("org.eclipse.core.runtime.content.IContentTypeManager$IContentTypeChangeListener");
			clazz = Class.forName("org.eclipse.core.runtime.content.IContentTypeManager$ISelectionPolicy");
			clazz = Class.forName("org.eclipse.core.runtime.content.IContentTypeMatcher");
			clazz = Class.forName("org.eclipse.core.runtime.content.IContentTypeSettings");
			clazz = Class.forName("org.eclipse.core.runtime.content.ITextContentDescriber");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.BasicLocation");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.BundleLocalizationImpl");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.CachedManifest");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.ClasspathManifest");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.ContextFinder");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.ContextFinder$1");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.ContextFinder$2");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.ContextFinder$Finder");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseAdaptorHook");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseAdaptorHook$DomParsingService");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseAdaptorHook$SaxParsingService");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseClassLoadingHook");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseCommandProvider");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseEnvironmentInfo");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseErrorHandler");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter$TerminatingClassNotFoundException");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseLogHook");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.EclipseStorageHook");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.IModel");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.IPluginInfo");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.LocationHelper");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.Locker");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.Locker_JavaNio");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.PluginConverterImpl");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.PluginParser");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.Semaphore");
			clazz = Class.forName("org.eclipse.core.runtime.internal.adaptor.URLConverterImpl");
			clazz = Class.forName("org.eclipse.core.runtime.internal.stats.StatsManager");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.IJobChangeEvent");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.IJobChangeListener");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.IJobManager");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.IJobStatus");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.ILock");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.ISchedulingRule");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.Job");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.JobChangeAdapter");
			clazz = Class.forName("org.eclipse.core.runtime.jobs.MultiRule");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.AbstractPreferenceInitializer");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.ConfigurationScope");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.DefaultScope");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IEclipsePreferences");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IEclipsePreferences$INodeChangeListener");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IEclipsePreferences$IPreferenceChangeListener");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IEclipsePreferences$NodeChangeEvent");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IEclipsePreferences$PreferenceChangeEvent");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IPreferenceNodeVisitor");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IPreferencesService");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IScope");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.IScopeContext");
			clazz = Class.forName("org.eclipse.core.runtime.preferences.InstanceScope");
			clazz = Class.forName("org.eclipse.core.runtime.spi.IDynamicExtensionRegistry");
			clazz = Class.forName("org.eclipse.core.runtime.spi.IRegistryProvider");
			clazz = Class.forName("org.eclipse.core.runtime.spi.RegistryContributor");
			clazz = Class.forName("org.eclipse.core.runtime.spi.RegistryStrategy");
			clazz = Class.forName("org.eclipse.debug.core.DebugEvent");
			clazz = Class.forName("org.eclipse.debug.core.DebugException");
			clazz = Class.forName("org.eclipse.debug.core.DebugPlugin");
			clazz = Class.forName("org.eclipse.debug.core.DebugPlugin$1");
			clazz = Class.forName("org.eclipse.debug.core.DebugPlugin$AsynchRunner");
			clazz = Class.forName("org.eclipse.debug.core.DebugPlugin$EventDispatchJob");
			clazz = Class.forName("org.eclipse.debug.core.DebugPlugin$EventNotifier");
			clazz = Class.forName("org.eclipse.debug.core.DebugPlugin$StatusHandlerKey");
			clazz = Class.forName("org.eclipse.debug.core.IBreakpointListener");
			clazz = Class.forName("org.eclipse.debug.core.IBreakpointManager");
			clazz = Class.forName("org.eclipse.debug.core.IDebugEventSetListener");
			clazz = Class.forName("org.eclipse.debug.core.IExpressionManager");
			clazz = Class.forName("org.eclipse.debug.core.ILaunch");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchConfiguration");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchConfigurationListener");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchConfigurationType");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchConfigurationWorkingCopy");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchDelegate");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchListener");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchManager");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchMode");
			clazz = Class.forName("org.eclipse.debug.core.ILaunchesListener");
			clazz = Class.forName("org.eclipse.debug.core.IMemoryBlockManager");
			clazz = Class.forName("org.eclipse.debug.core.IRequest");
			clazz = Class.forName("org.eclipse.debug.core.Launch");
			clazz = Class.forName("org.eclipse.debug.core.commands.IDebugCommandHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.IDebugCommandRequest");
			clazz = Class.forName("org.eclipse.debug.core.commands.IDisconnectHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.IDropToFrameHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.IResumeHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.IStepFiltersHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.IStepIntoHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.IStepOverHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.IStepReturnHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.ISuspendHandler");
			clazz = Class.forName("org.eclipse.debug.core.commands.ITerminateHandler");
			clazz = Class.forName("org.eclipse.debug.core.model.IDebugElement");
			clazz = Class.forName("org.eclipse.debug.core.model.IDebugTarget");
			clazz = Class.forName("org.eclipse.debug.core.model.IDisconnect");
			clazz = Class.forName("org.eclipse.debug.core.model.IDropToFrame");
			clazz = Class.forName("org.eclipse.debug.core.model.IFlushableStreamMonitor");
			clazz = Class.forName("org.eclipse.debug.core.model.IMemoryBlockRetrieval");
			clazz = Class.forName("org.eclipse.debug.core.model.IProcess");
			clazz = Class.forName("org.eclipse.debug.core.model.IStep");
			clazz = Class.forName("org.eclipse.debug.core.model.IStepFilters");
			clazz = Class.forName("org.eclipse.debug.core.model.IStreamMonitor");
			clazz = Class.forName("org.eclipse.debug.core.model.IStreamsProxy");
			clazz = Class.forName("org.eclipse.debug.core.model.IStreamsProxy2");
			clazz = Class.forName("org.eclipse.debug.core.model.ISuspendResume");
			clazz = Class.forName("org.eclipse.debug.core.model.ITerminate");
			clazz = Class.forName("org.eclipse.debug.core.model.RuntimeProcess");
			clazz = Class.forName("org.eclipse.debug.core.model.RuntimeProcess$ProcessMonitorThread");
			clazz = Class.forName("org.eclipse.debug.internal.core.DebugCoreMessages");
			clazz = Class.forName("org.eclipse.debug.internal.core.DebugOptions");
			clazz = Class.forName("org.eclipse.debug.internal.core.DebugPreferenceInitializer");
			clazz = Class.forName("org.eclipse.debug.internal.core.InputStreamMonitor");
			clazz = Class.forName("org.eclipse.debug.internal.core.InputStreamMonitor$1");
			clazz = Class.forName("org.eclipse.debug.internal.core.LaunchConfiguration");
			clazz = Class.forName("org.eclipse.debug.internal.core.LaunchConfigurationType");
			clazz = Class.forName("org.eclipse.debug.internal.core.LaunchDelegate");
			clazz = Class.forName("org.eclipse.debug.internal.core.LaunchManager");
			clazz = Class.forName("org.eclipse.debug.internal.core.LaunchManager$LaunchNotifier");
			clazz = Class.forName("org.eclipse.debug.internal.core.LaunchManager$LaunchesNotifier");
			clazz = Class.forName("org.eclipse.debug.internal.core.OutputStreamMonitor");
			clazz = Class.forName("org.eclipse.debug.internal.core.OutputStreamMonitor$1");
			clazz = Class.forName("org.eclipse.debug.internal.core.OutputStreamMonitor$ContentNotifier");
			clazz = Class.forName("org.eclipse.debug.internal.core.StepFilterManager");
			clazz = Class.forName("org.eclipse.debug.internal.core.StreamsProxy");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.CommandAdapterFactory");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.DebugCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.DebugCommand$1");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.DebugCommand$UpdateJob");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.DisconnectCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.DropToFrameCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.ForEachCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.ResumeCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.StepCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.StepFiltersCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.StepIntoCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.StepOverCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.StepReturnCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.SuspendCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.commands.TerminateCommand");
			clazz = Class.forName("org.eclipse.debug.internal.core.sourcelookup.SourceLookupUtils");
			clazz = Class.forName("org.eclipse.equinox.app.IApplication");
			clazz = Class.forName("org.eclipse.equinox.app.IApplicationContext");
			clazz = Class.forName("org.eclipse.equinox.internal.app.Activator");
			clazz = Class.forName("org.eclipse.equinox.internal.app.AppCommands");
			clazz = Class.forName("org.eclipse.equinox.internal.app.AppPersistence");
			clazz = Class.forName("org.eclipse.equinox.internal.app.CommandLineArgs");
			clazz = Class.forName("org.eclipse.equinox.internal.app.EclipseAppContainer");
			clazz = Class.forName("org.eclipse.equinox.internal.app.EclipseAppContainer$RegisterService");
			clazz = Class.forName("org.eclipse.equinox.internal.app.EclipseAppDescriptor");
			clazz = Class.forName("org.eclipse.equinox.internal.app.EclipseAppHandle");
			clazz = Class.forName("org.eclipse.equinox.internal.app.IBranding");
			clazz = Class.forName("org.eclipse.equinox.internal.app.Messages");
			clazz = Class.forName("org.eclipse.equinox.internal.provisional.configurator.Configurator");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.Activator");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.ConfigApplier");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.ConfigApplier$1");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.SimpleConfiguratorFactory");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.SimpleConfiguratorImpl");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.console.ConfiguratorCommandProvider");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.utils.BundleInfo");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.utils.EquinoxUtils");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.utils.SimpleConfiguratorUtils");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.utils.StateResolverUtils");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.utils.URIUtil");
			clazz = Class.forName("org.eclipse.equinox.internal.simpleconfigurator.utils.Utils");
			clazz = Class.forName("org.eclipse.jdt.core.BufferChangedEvent");
			clazz = Class.forName("org.eclipse.jdt.core.ClasspathVariableInitializer");
			clazz = Class.forName("org.eclipse.jdt.core.CompletionContext");
			clazz = Class.forName("org.eclipse.jdt.core.CompletionProposal");
			clazz = Class.forName("org.eclipse.jdt.core.CompletionRequestor");
			clazz = Class.forName("org.eclipse.jdt.core.ElementChangedEvent");
			clazz = Class.forName("org.eclipse.jdt.core.Flags");
			clazz = Class.forName("org.eclipse.jdt.core.IAccessRule");
			clazz = Class.forName("org.eclipse.jdt.core.IAnnotatable");
			clazz = Class.forName("org.eclipse.jdt.core.IAnnotation");
			clazz = Class.forName("org.eclipse.jdt.core.IBuffer");
			clazz = Class.forName("org.eclipse.jdt.core.IBufferChangedListener");
			clazz = Class.forName("org.eclipse.jdt.core.IBufferFactory");
			clazz = Class.forName("org.eclipse.jdt.core.IClassFile");
			clazz = Class.forName("org.eclipse.jdt.core.IClasspathAttribute");
			clazz = Class.forName("org.eclipse.jdt.core.IClasspathContainer");
			clazz = Class.forName("org.eclipse.jdt.core.IClasspathEntry");
			clazz = Class.forName("org.eclipse.jdt.core.ICodeAssist");
			clazz = Class.forName("org.eclipse.jdt.core.ICompilationUnit");
			clazz = Class.forName("org.eclipse.jdt.core.ICompletionRequestor");
			clazz = Class.forName("org.eclipse.jdt.core.IElementChangedListener");
			clazz = Class.forName("org.eclipse.jdt.core.IField");
			clazz = Class.forName("org.eclipse.jdt.core.IImportContainer");
			clazz = Class.forName("org.eclipse.jdt.core.IImportDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.IInitializer");
			clazz = Class.forName("org.eclipse.jdt.core.IJavaElement");
			clazz = Class.forName("org.eclipse.jdt.core.IJavaElementDelta");
			clazz = Class.forName("org.eclipse.jdt.core.IJavaModel");
			clazz = Class.forName("org.eclipse.jdt.core.IJavaModelStatus");
			clazz = Class.forName("org.eclipse.jdt.core.IJavaModelStatusConstants");
			clazz = Class.forName("org.eclipse.jdt.core.IJavaProject");
			clazz = Class.forName("org.eclipse.jdt.core.ILocalVariable");
			clazz = Class.forName("org.eclipse.jdt.core.IMember");
			clazz = Class.forName("org.eclipse.jdt.core.IMemberValuePair");
			clazz = Class.forName("org.eclipse.jdt.core.IMethod");
			clazz = Class.forName("org.eclipse.jdt.core.IOpenable");
			clazz = Class.forName("org.eclipse.jdt.core.IPackageDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.IPackageFragment");
			clazz = Class.forName("org.eclipse.jdt.core.IPackageFragmentRoot");
			clazz = Class.forName("org.eclipse.jdt.core.IParent");
			clazz = Class.forName("org.eclipse.jdt.core.IRegion");
			clazz = Class.forName("org.eclipse.jdt.core.ISourceManipulation");
			clazz = Class.forName("org.eclipse.jdt.core.ISourceRange");
			clazz = Class.forName("org.eclipse.jdt.core.ISourceReference");
			clazz = Class.forName("org.eclipse.jdt.core.IType");
			clazz = Class.forName("org.eclipse.jdt.core.ITypeHierarchy");
			clazz = Class.forName("org.eclipse.jdt.core.ITypeParameter");
			clazz = Class.forName("org.eclipse.jdt.core.ITypeRoot");
			clazz = Class.forName("org.eclipse.jdt.core.IWorkingCopy");
			clazz = Class.forName("org.eclipse.jdt.core.JavaConventions");
			clazz = Class.forName("org.eclipse.jdt.core.JavaCore");
			clazz = Class.forName("org.eclipse.jdt.core.JavaCore$1");
			clazz = Class.forName("org.eclipse.jdt.core.JavaModelException");
			clazz = Class.forName("org.eclipse.jdt.core.Signature");
			clazz = Class.forName("org.eclipse.jdt.core.WorkingCopyOwner");
			clazz = Class.forName("org.eclipse.jdt.core.compiler.BuildContext");
			clazz = Class.forName("org.eclipse.jdt.core.compiler.CategorizedProblem");
			clazz = Class.forName("org.eclipse.jdt.core.compiler.CharOperation");
			clazz = Class.forName("org.eclipse.jdt.core.compiler.CompilationParticipant");
			clazz = Class.forName("org.eclipse.jdt.core.compiler.IProblem");
			clazz = Class.forName("org.eclipse.jdt.core.compiler.InvalidInputException");
			clazz = Class.forName("org.eclipse.jdt.core.dom.AST");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTConverter");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTNode");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTNode$NodeList");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTNode$NodeList$Cursor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTParser");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTRecoveryPropagator");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTRequestor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTSyntaxErrorPropagator");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ASTVisitor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.AbstractTypeDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Annotation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.AnnotationTypeDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.AnnotationTypeMemberDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.AnonymousClassDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ArrayAccess");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ArrayCreation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ArrayInitializer");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ArrayType");
			clazz = Class.forName("org.eclipse.jdt.core.dom.AssertStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Assignment");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Assignment$Operator");
			clazz = Class.forName("org.eclipse.jdt.core.dom.BindingResolver");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Block");
			clazz = Class.forName("org.eclipse.jdt.core.dom.BlockComment");
			clazz = Class.forName("org.eclipse.jdt.core.dom.BodyDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.BooleanLiteral");
			clazz = Class.forName("org.eclipse.jdt.core.dom.BreakStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CastExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CatchClause");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CharacterLiteral");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ChildListPropertyDescriptor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ChildPropertyDescriptor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ClassInstanceCreation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Comment");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CompilationUnit");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CompilationUnitResolver");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CompilationUnitResolver$1");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CompilationUnitResolver$1$Requestor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CompilationUnitResolver$2");
			clazz = Class.forName("org.eclipse.jdt.core.dom.CompilationUnitResolver$IntArrayList");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ConditionalExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ConstructorInvocation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ContinueStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.DefaultASTVisitor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.DefaultBindingResolver");
			clazz = Class.forName("org.eclipse.jdt.core.dom.DefaultBindingResolver$BindingTables");
			clazz = Class.forName("org.eclipse.jdt.core.dom.DefaultCommentMapper");
			clazz = Class.forName("org.eclipse.jdt.core.dom.DefaultCommentMapper$CommentMapperVisitor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.DoStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.DocCommentParser");
			clazz = Class.forName("org.eclipse.jdt.core.dom.EmptyStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.EnhancedForStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.EnumConstantDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.EnumDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Expression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ExpressionStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.FieldAccess");
			clazz = Class.forName("org.eclipse.jdt.core.dom.FieldDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ForStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IAnnotationBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IDocElement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IExtendedModifier");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IMemberValuePairBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IMethodBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IPackageBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ITypeBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IVariableBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.IfStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ImportDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.InfixExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.InfixExpression$Operator");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Initializer");
			clazz = Class.forName("org.eclipse.jdt.core.dom.InstanceofExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.InternalASTRewrite");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Javadoc");
			clazz = Class.forName("org.eclipse.jdt.core.dom.LabeledStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.LineComment");
			clazz = Class.forName("org.eclipse.jdt.core.dom.MarkerAnnotation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.MemberRef");
			clazz = Class.forName("org.eclipse.jdt.core.dom.MemberValuePair");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Message");
			clazz = Class.forName("org.eclipse.jdt.core.dom.MethodBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.MethodDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.MethodInvocation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.MethodRef");
			clazz = Class.forName("org.eclipse.jdt.core.dom.MethodRefParameter");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Modifier");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Modifier$ModifierKeyword");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Name");
			clazz = Class.forName("org.eclipse.jdt.core.dom.NodeEventHandler");
			clazz = Class.forName("org.eclipse.jdt.core.dom.NodeSearcher");
			clazz = Class.forName("org.eclipse.jdt.core.dom.NormalAnnotation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.NullLiteral");
			clazz = Class.forName("org.eclipse.jdt.core.dom.NumberLiteral");
			clazz = Class.forName("org.eclipse.jdt.core.dom.PackageDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ParameterizedType");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ParenthesizedExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.PostfixExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.PostfixExpression$Operator");
			clazz = Class.forName("org.eclipse.jdt.core.dom.PrefixExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.PrefixExpression$Operator");
			clazz = Class.forName("org.eclipse.jdt.core.dom.PrimitiveType");
			clazz = Class.forName("org.eclipse.jdt.core.dom.PrimitiveType$Code");
			clazz = Class.forName("org.eclipse.jdt.core.dom.QualifiedName");
			clazz = Class.forName("org.eclipse.jdt.core.dom.QualifiedType");
			clazz = Class.forName("org.eclipse.jdt.core.dom.RecoveredTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.RecoveredVariableBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ReturnStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SimpleName");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SimplePropertyDescriptor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SimpleType");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SingleMemberAnnotation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SingleVariableDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Statement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.StringLiteral");
			clazz = Class.forName("org.eclipse.jdt.core.dom.StructuralPropertyDescriptor");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SuperConstructorInvocation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SuperFieldAccess");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SuperMethodInvocation");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SwitchCase");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SwitchStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.SynchronizedStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TagElement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TextElement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ThisExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.ThrowStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TryStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.Type");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TypeBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TypeBinding$1");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TypeDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TypeDeclarationStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TypeLiteral");
			clazz = Class.forName("org.eclipse.jdt.core.dom.TypeParameter");
			clazz = Class.forName("org.eclipse.jdt.core.dom.VariableBinding");
			clazz = Class.forName("org.eclipse.jdt.core.dom.VariableDeclaration");
			clazz = Class.forName("org.eclipse.jdt.core.dom.VariableDeclarationExpression");
			clazz = Class.forName("org.eclipse.jdt.core.dom.VariableDeclarationFragment");
			clazz = Class.forName("org.eclipse.jdt.core.dom.VariableDeclarationStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.WhileStatement");
			clazz = Class.forName("org.eclipse.jdt.core.dom.WildcardType");
			clazz = Class.forName("org.eclipse.jdt.core.eval.IEvaluationContext");
			clazz = Class.forName("org.eclipse.jdt.core.formatter.CodeFormatter");
			clazz = Class.forName("org.eclipse.jdt.core.formatter.DefaultCodeFormatterConstants");
			clazz = Class.forName("org.eclipse.jdt.core.search.FieldDeclarationMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.FieldReferenceMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.IJavaSearchConstants");
			clazz = Class.forName("org.eclipse.jdt.core.search.IJavaSearchScope");
			clazz = Class.forName("org.eclipse.jdt.core.search.ISearchPattern");
			clazz = Class.forName("org.eclipse.jdt.core.search.LocalVariableDeclarationMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.LocalVariableReferenceMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.MethodDeclarationMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.MethodReferenceMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.PackageDeclarationMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.PackageReferenceMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.ReferenceMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.SearchDocument");
			clazz = Class.forName("org.eclipse.jdt.core.search.SearchEngine");
			clazz = Class.forName("org.eclipse.jdt.core.search.SearchEngine$ResultCollectorAdapter");
			clazz = Class.forName("org.eclipse.jdt.core.search.SearchMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.SearchParticipant");
			clazz = Class.forName("org.eclipse.jdt.core.search.SearchPattern");
			clazz = Class.forName("org.eclipse.jdt.core.search.SearchRequestor");
			clazz = Class.forName("org.eclipse.jdt.core.search.TypeDeclarationMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.TypeNameMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.TypeNameRequestor");
			clazz = Class.forName("org.eclipse.jdt.core.search.TypeParameterDeclarationMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.TypeParameterReferenceMatch");
			clazz = Class.forName("org.eclipse.jdt.core.search.TypeReferenceMatch");
			clazz = Class.forName("org.eclipse.jdt.core.tests.builder.TestingEnvironment");
			clazz = Class.forName("org.eclipse.jdt.core.tests.builder.TestingEnvironment$1");
			clazz = Class.forName("org.eclipse.jdt.core.tests.model.AbstractJavaModelTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.model.AbstractJavaModelTests$1");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceASTTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceASTTests$1");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceASTTests$2");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceBuildTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceCompleteSearchTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceCompleteSearchTests$JavaSearchResultCollector");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceCompletionTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceCompletionTests$TestCompletionRequestor");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceFormatterTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceModelTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceSearchTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceSearchTests$Measuring");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceTests$FullSourceProjectsFilter");
			clazz = Class.forName("org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceTypeHierarchyTests");
			clazz = Class.forName("org.eclipse.jdt.core.tests.util.Util");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.CompletionEngine");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.CompletionEngine$1");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.CompletionEngine$7");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.CompletionEngine$8");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.CompletionEngine$AcceptedType");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.CompletionEngine$CompletionProblemFactory");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.CompletionRequestorWrapper");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.ISearchRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.ISelectionRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.InternalCompletionContext");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.InternalCompletionProposal");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.MissingTypesGuesser$GuessedTypeRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.RelevanceConstants");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.UnresolvedReferenceNameFinder$UnresolvedReferenceNameRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionJavadoc");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionJavadocParser");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionNodeDetector");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionNodeFound");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnAnnotationMemberValuePair");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnAnnotationOfType");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnArgumentName");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnBranchStatementLabel");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnClassLiteralAccess");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnExplicitConstructorCall");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldName");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnFieldType");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnImportReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadoc");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocQualifiedTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocSingleTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnJavadocTag");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword1");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword2");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnKeyword3");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnLocalName");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnMarkerAnnotationName");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberAccess");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnMemberValueName");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSend");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnMessageSendName");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodName");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodReturnType");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnMethodTypeParameter");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnPackageReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnParameterizedQualifiedTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedAllocationExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedNameReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnQualifiedTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleNameReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnSingleTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionOnStringLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionParser");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.CompletionScanner");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.complete.InvalidCursorLocation");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.impl.AssistOptions");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.impl.AssistParser");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.impl.Engine");
			clazz = Class.forName("org.eclipse.jdt.internal.codeassist.impl.Keywords");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ASTVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ClassFile");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ClassFile$1");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ClassFilePool");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.CompilationResult");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.CompilationResult$1");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.Compiler");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$1");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$4");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ExtraFlags");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ICompilerRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.IProblemFactory");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ISourceElementRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ProcessTaskManager");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ReadManager");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.SourceElementNotifier");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.SourceElementParser");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.SourceElementParser$1");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.SourceJavadocParser");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ASTNode");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.AllocationExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Annotation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Argument");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ArrayInitializer");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ArrayReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.AssertStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Assignment");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.BinaryExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Block");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.BranchStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.BreakStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.CaseStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.CastExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.CharLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Clinit");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.CompoundAssignment");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ConditionalExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ContinueStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.DoStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.DoubleLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.EmptyStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.EqualExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Expression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.FalseLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.FieldDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.FieldReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.FloatLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ForStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ForeachStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.IfStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ImportReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Initializer");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.IntLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Javadoc");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.LabeledStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Literal");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.LocalDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.LongLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.MagicLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.MemberValuePair");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.MessageSend");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.MethodDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.NameReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.NormalAnnotation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.NullLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.NumberLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.OperatorExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.OperatorIds");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.PostfixExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.PrefixExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Reference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ReturnStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.SingleNameReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.SingleTypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Statement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.StringLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.SuperReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.SwitchStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ThisReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.ThrowStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.TrueLiteral");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.TryStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.TypeDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.TypeParameter");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.TypeReference");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.UnaryExpression");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.WhileStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.ast.Wildcard");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.batch.CompilationUnit");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.FieldInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.MethodInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.BranchLabel");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.CachedIndexEntry");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.CaseLabel");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.CharArrayCache");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.CodeStream");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.ConstantPool");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.DoubleCache");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.FloatCache");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.IntegerCache");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.Label");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.LongCache");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.ObjectCache");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.AccessRuleSet");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.ClassSignature");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.EnumConstantSignature");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IBinaryField");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IBinaryMethod");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IBinaryNestedType");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IBinaryType");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.ICompilationUnit");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IDependent");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IGenericField");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IGenericMethod");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.IGenericType");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.INameEnvironment");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.ISourceField");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.ISourceImport");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.ISourceMethod");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.ISourceType");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.FlowContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.FlowInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.LabelFlowContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.BooleanConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.ByteConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.CharConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.CompilerOptions");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.CompilerStats");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.Constant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.DoubleConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.FloatConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.ITypeRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.IntConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.IrritantSet");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.LongConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.ReferenceContext");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.ShortConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.impl.StringConstant");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$MethodHolder");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ArrayBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.Binding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.BlockScope");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.CaptureBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ClassScope");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ElementValuePair");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.FieldBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ImportBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.InvocationSite");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.MethodBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.MethodScope");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.MethodVerifier");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.PackageBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ProblemBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ProblemReasons");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$1");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$2");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$3");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.Scope");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.Substitution");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.TypeBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.TypeConstants");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.TypeIds");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.VariableBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.lookup.WildcardBinding");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.JavadocParser");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.Parser");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.Parser$1");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredBlock");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredElement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredField");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredImport");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredMethod");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredStatement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredType");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveredUnit");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.RecoveryScanner");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.Scanner");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.ScannerHelper");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter$AnonymousMemberFound");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.TerminalTokens");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.parser.TypeConverter");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.AbortCompilation");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.AbortMethod");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.AbortType");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.DefaultProblem");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.ProblemHandler");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.ProblemReporter");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.ProblemSeverities");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.CompoundNameVector");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.GenericXMLWriter");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.HashtableOfInt");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.HashtableOfLong");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.HashtableOfObject");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.HashtableOfPackage");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.HashtableOfType");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.Messages");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.ObjectVector");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.SimpleLookupTable");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.SimpleNameVector");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.SimpleSet");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.SuffixConstants");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.Util");
			clazz = Class.forName("org.eclipse.jdt.internal.compiler.util.Util$Displayable");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ASTHolderCUInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.AnnotatableInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.Annotation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.BatchInitializationMonitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.BatchOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.BinaryMember");
			clazz = Class.forName("org.eclipse.jdt.internal.core.BinaryType");
			clazz = Class.forName("org.eclipse.jdt.internal.core.Buffer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.Buffer$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.BufferCache");
			clazz = Class.forName("org.eclipse.jdt.internal.core.BufferManager");
			clazz = Class.forName("org.eclipse.jdt.internal.core.BufferManager$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CancelableNameEnvironment");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CancelableProblemFactory");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ChangeClasspathOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ClassFile");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ClassFileWorkingCopy");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ClasspathChange");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ClasspathEntry");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ClasspathEntry$AssertionFailedException");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ClasspathValidation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CompilationUnit");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CompilationUnit$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CompilationUnit$3");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CompilationUnitElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CompilationUnitStructureRequestor$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CopyElementsOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CopyResourceElementsOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.CreateTypeHierarchyOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.DefaultWorkingCopyOwner");
			clazz = Class.forName("org.eclipse.jdt.internal.core.DeltaProcessingState");
			clazz = Class.forName("org.eclipse.jdt.internal.core.DeltaProcessor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.DeltaProcessor$1$FoundRelevantDeltaException");
			clazz = Class.forName("org.eclipse.jdt.internal.core.DeltaProcessor$2");
			clazz = Class.forName("org.eclipse.jdt.internal.core.DeltaProcessor$OutputsInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.DeltaProcessor$RootInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ElementCache");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ExternalFolderChange");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ExternalFoldersManager");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ExternalFoldersManager$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ExternalPackageFragmentRoot");
			clazz = Class.forName("org.eclipse.jdt.internal.core.IJavaElementRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.INamingRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.IPathRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ImportContainer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ImportContainerInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ImportDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ImportDeclarationElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.Initializer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.InitializerElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.InitializerWithChildrenInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JarPackageFragment");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JarPackageFragmentRoot");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JarPackageFragmentRootInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaCorePreferenceInitializer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaElement");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaElementDelta");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaElementRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModel");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelCache");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$11");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$13");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$14");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$16");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$17");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$18");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$19");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$2");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$20");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$3");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$4");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$5");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$CompilationParticipants");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$EclipsePreferencesListener");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$PerProjectInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelManager$VariablesAndContainersSaveHelper");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaModelStatus");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaProject");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaProject$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaProject$2");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaProject$3");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaProject$ResolvedClasspath");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaProjectElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavaProjectElementInfo$ProjectCache");
			clazz = Class.forName("org.eclipse.jdt.internal.core.JavadocContents");
			clazz = Class.forName("org.eclipse.jdt.internal.core.LocalVariable");
			clazz = Class.forName("org.eclipse.jdt.internal.core.Member");
			clazz = Class.forName("org.eclipse.jdt.internal.core.MemberElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ModelUpdater");
			clazz = Class.forName("org.eclipse.jdt.internal.core.MoveElementsOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.MoveResourceElementsOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.MultiOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.NameLookup");
			clazz = Class.forName("org.eclipse.jdt.internal.core.NameLookup$Answer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.NamedMember");
			clazz = Class.forName("org.eclipse.jdt.internal.core.NullBuffer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.Openable");
			clazz = Class.forName("org.eclipse.jdt.internal.core.OpenableElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.OverflowingLRUCache");
			clazz = Class.forName("org.eclipse.jdt.internal.core.PackageDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.core.PackageFragment");
			clazz = Class.forName("org.eclipse.jdt.internal.core.PackageFragmentInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.PackageFragmentRoot");
			clazz = Class.forName("org.eclipse.jdt.internal.core.PackageFragmentRootInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ProjectReferenceChange");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ProjectReferenceChange$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.Region");
			clazz = Class.forName("org.eclipse.jdt.internal.core.RenameElementsOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.RenameResourceElementsOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ResolvedBinaryType");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ResolvedSourceField");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ResolvedSourceMethod");
			clazz = Class.forName("org.eclipse.jdt.internal.core.ResolvedSourceType");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SearchableEnvironment");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SearchableEnvironment$3");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SearchableEnvironment$4");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SearchableEnvironmentRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SetClasspathOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SetVariablesOperation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SimpleDelta");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SingleTypeRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceAnnotationMethodInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceConstructorInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceConstructorWithChildrenInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceField");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceFieldElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceFieldWithChildrenInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceMethod");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceMethodElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceMethodInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceMethodWithChildrenInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceRefElement");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceRefElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceType");
			clazz = Class.forName("org.eclipse.jdt.internal.core.SourceTypeElementInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.core.TypeParameter");
			clazz = Class.forName("org.eclipse.jdt.internal.core.TypeVector");
			clazz = Class.forName("org.eclipse.jdt.internal.core.VerboseElementCache");
			clazz = Class.forName("org.eclipse.jdt.internal.core.XMLWriter");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.AbortIncrementalBuildException");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.AbstractImageBuilder");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.AbstractImageBuilder$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.AdditionalTypeCollection");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.BatchImageBuilder");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.BatchImageBuilder$3");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.BuildNotifier");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ClasspathDirectory");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ClasspathJar");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ClasspathJar$PackageCacheEntry");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ClasspathLocation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ClasspathMultiDirectory");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.CompilationParticipantResult");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ICompilationUnitLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ImageBuilderInternalException");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.JavaBuilder");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.MissingSourceFileException");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.NameEnvironment");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.NameSet");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ProblemFactory");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.QualifiedNameSet");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.ReferenceCollection");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.SourceFile");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.State");
			clazz = Class.forName("org.eclipse.jdt.internal.core.builder.WorkQueue");
			clazz = Class.forName("org.eclipse.jdt.internal.core.dom.NaiveASTFlattener");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.HierarchyBinaryType");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.HierarchyBuilder$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.HierarchyResolver");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.HierarchyType");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder$1$PathCollector");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder$2");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder$3");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.IndexBasedHierarchyBuilder$Queue");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.RegionBasedTypeHierarchy");
			clazz = Class.forName("org.eclipse.jdt.internal.core.hierarchy.TypeHierarchy");
			clazz = Class.forName("org.eclipse.jdt.internal.core.index.DiskIndex");
			clazz = Class.forName("org.eclipse.jdt.internal.core.index.DiskIndex$IntList");
			clazz = Class.forName("org.eclipse.jdt.internal.core.index.EntryResult");
			clazz = Class.forName("org.eclipse.jdt.internal.core.index.Index");
			clazz = Class.forName("org.eclipse.jdt.internal.core.index.MemoryIndex");
			clazz = Class.forName("org.eclipse.jdt.internal.core.jdom.CompilationUnit");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.AbstractJavaSearchScope");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.AbstractSearchScope");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.BasicSearchEngine");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.BasicSearchEngine$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.BasicSearchEngine$1$AllConstructorDeclarationsVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.BasicSearchEngine$1$AllTypeDeclarationsVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.BasicSearchEngine$2");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.BasicSearchEngine$2$AllTypeDeclarationsVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.BasicSearchEngine$3");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.BasicSearchEngine$4");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.HierarchyScope");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.IRestrictedAccessConstructorRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.IRestrictedAccessTypeRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.IndexQueryRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.IndexSelector");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.JavaSearchDocument");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.JavaSearchParticipant");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.JavaSearchScope");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.JavaSearchTypeNameMatch");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.JavaWorkspaceScope");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.PathCollector");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.PatternSearchJob");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.SubTypeSearchJob");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.TypeNameRequestorWrapper");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.AbstractIndexer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.AddJarFileToIndex");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.BinaryIndexer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.IIndexConstants");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.IndexAllProject");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.IndexAllProject$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.IndexBinaryFolder");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.IndexManager");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.IndexManager$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.IndexRequest");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.IndexingParser");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.ReadWriteMonitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.RemoveFolderFromIndex");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.SaveIndex");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.SourceIndexer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.indexing.SourceIndexerRequestor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.AndLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.AndPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.ClasspathSourceDirectory");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.ConstructorDeclarationPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.ConstructorLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.ConstructorPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.DeclarationOfAccessedFieldsPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedMethodsPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.DeclarationOfReferencedTypesPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.FieldLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.FieldPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.ImportMatchLocatorParser");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.IntersectingPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.JavaSearchNameEnvironment");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.JavaSearchPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.LocalVariableLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.LocalVariablePattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocator$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocator$WorkingCopyDocument");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocator$WrappedCoreException");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser$ClassAndMethodDeclarationVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser$ClassButNoMethodDeclarationVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser$MethodButNoClassDeclarationVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser$NoClassNoMethodDeclarationVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MatchingNodeSet$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MethodLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MethodPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.MultiTypeDeclarationPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.OrLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.OrPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.PackageDeclarationLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.PackageDeclarationPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.PackageReferenceLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.PackageReferencePattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.PatternLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.PossibleMatch");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.PossibleMatchSet");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.QualifiedTypeDeclarationPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.SecondaryTypeDeclarationPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector$1");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.SuperTypeNamesCollector$TypeDeclarationVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.SuperTypeReferenceLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.SuperTypeReferencePattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.TypeDeclarationLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.TypeDeclarationPattern$PackageNameSet");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.TypeParameterLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.TypeParameterPattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.TypeReferencePattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.VariableLocator");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.matching.VariablePattern");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.processing.IJob");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.processing.JobManager");
			clazz = Class.forName("org.eclipse.jdt.internal.core.search.processing.JobManager$1$ProgressJob");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.CodeSnippetParsingUtil");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.CommentRecorderParser");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.HandleFactory");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.HashSetOfArray");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.HashtableOfArrayToObject");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.ICacheEnumeration");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.ILRUCacheable");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.LRUCache");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.LRUCache$LRUCacheEntry");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.Messages");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.RecordedParsingInformation");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.ReferenceInfoAdapter");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.ResourceCompilationUnit");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.SimpleWordSet");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.Util");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.Util$BindingsToNodesMap");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.Util$Comparer");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.WeakHashSet");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.WeakHashSet$HashableWeakReference");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray");
			clazz = Class.forName("org.eclipse.jdt.internal.core.util.WeakHashSetOfCharArray$HashableWeakReference");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.AbortFormatting");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.BinaryExpressionFragmentBuilder");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.CascadingMethodInvocationFragmentBuilder");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.CodeFormatterVisitor");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.CodeFormatterVisitor$MultiFieldDeclaration");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.DefaultCodeFormatter");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.DefaultCodeFormatterOptions");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.FormatJavadoc");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.FormatJavadocBlock");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.FormatJavadocNode");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.FormatJavadocText");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.FormatterCommentParser");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.Location");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.OptimizedReplaceEdit");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.Scribe");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.align.Alignment");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.align.AlignmentException");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.comment.CommentRegion");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.comment.IBorderAttributes");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.comment.ICommentAttributes");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.comment.IHtmlTagDelimiters");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.comment.IJavaDocTagConstants");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.comment.JavaDocRegion");
			clazz = Class.forName("org.eclipse.jdt.internal.formatter.comment.MultiCommentRegion");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.CompositeId");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.EECompilationParticipant");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.EEVMType");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.JavaClasspathVariablesInitializer");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.LaunchingMessages");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.LaunchingPlugin");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.LaunchingPlugin$1");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.LaunchingPlugin$2");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.LaunchingPlugin$JREUpdateJob");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.LaunchingPlugin$VMChanges");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.LaunchingPreferenceInitializer");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.LibraryInfo");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.Standard11xVMType");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.StandardVM");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.StandardVMType");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.VMDefinitionsContainer");
			clazz = Class.forName("org.eclipse.jdt.internal.launching.VMListener");
			clazz = Class.forName("org.eclipse.jdt.launching.AbstractVMInstall");
			clazz = Class.forName("org.eclipse.jdt.launching.AbstractVMInstallType");
			clazz = Class.forName("org.eclipse.jdt.launching.IRuntimeClasspathEntry");
			clazz = Class.forName("org.eclipse.jdt.launching.IRuntimeClasspathEntryResolver");
			clazz = Class.forName("org.eclipse.jdt.launching.IRuntimeClasspathProvider");
			clazz = Class.forName("org.eclipse.jdt.launching.IVMConnector");
			clazz = Class.forName("org.eclipse.jdt.launching.IVMInstall");
			clazz = Class.forName("org.eclipse.jdt.launching.IVMInstall2");
			clazz = Class.forName("org.eclipse.jdt.launching.IVMInstall3");
			clazz = Class.forName("org.eclipse.jdt.launching.IVMInstallChangedListener");
			clazz = Class.forName("org.eclipse.jdt.launching.IVMInstallType");
			clazz = Class.forName("org.eclipse.jdt.launching.IVMRunner");
			clazz = Class.forName("org.eclipse.jdt.launching.JavaRuntime");
			clazz = Class.forName("org.eclipse.jdt.launching.LibraryLocation");
			clazz = Class.forName("org.eclipse.jdt.launching.PropertyChangeEvent");
			clazz = Class.forName("org.eclipse.jdt.launching.StandardClasspathProvider");
			clazz = Class.forName("org.eclipse.jdt.launching.StandardSourcePathProvider");
			clazz = Class.forName("org.eclipse.jdt.launching.VMStandin");
			clazz = Class.forName("org.eclipse.jdt.launching.environments.IExecutionEnvironmentsManager");
			clazz = Class.forName("org.eclipse.jdt.launching.sourcelookup.ArchiveSourceLocation");
			clazz = Class.forName("org.eclipse.jdt.launching.sourcelookup.IJavaSourceLocation");
			clazz = Class.forName("org.eclipse.jface.text.BadLocationException");
			clazz = Class.forName("org.eclipse.jface.text.IDocument");
			clazz = Class.forName("org.eclipse.jface.text.ILineTracker");
			clazz = Class.forName("org.eclipse.jface.text.IRegion");
			clazz = Class.forName("org.eclipse.jface.text.Position");
			clazz = Class.forName("org.eclipse.jface.text.Region");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.BaseAdaptor");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.BaseAdaptor$ParentClassLoader");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.BaseData");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.HookConfigurator");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.HookRegistry");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.BundleEntry");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.BundleFile");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.BundleFileWrapperChain");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.DirBundleFile");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.DirZipBundleEntry");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.FileBundleEntry");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.MRUBundleFileList");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.NestedDirBundleFile");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.ZipBundleEntry");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.ZipBundleEntry$ZipBundleEntryInputStream");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.bundlefile.ZipBundleFile");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.hooks.AdaptorHook");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.hooks.BundleFileFactoryHook");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.hooks.BundleFileWrapperFactoryHook");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.hooks.ClassLoadingHook");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.hooks.ClassLoadingStatsHook");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.hooks.StorageHook");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.loader.BaseClassLoader");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.loader.ClasspathEntry");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.loader.ClasspathManager");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.loader.FragmentClasspath");
			clazz = Class.forName("org.eclipse.osgi.baseadaptor.loader.ParallelClassLoader");
			clazz = Class.forName("org.eclipse.osgi.event.BatchBundleListener");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.BundleClassLoader");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.BundleData");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.BundleOperation");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.BundleProtectionDomain");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.BundleWatcher");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.ClassLoaderDelegate");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.ClassLoaderDelegateHook");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.EventPublisher");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.FilePath");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.FrameworkAdaptor");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.PermissionStorage");
			clazz = Class.forName("org.eclipse.osgi.framework.adaptor.StatusException");
			clazz = Class.forName("org.eclipse.osgi.framework.console.CommandProvider");
			clazz = Class.forName("org.eclipse.osgi.framework.debug.Debug");
			clazz = Class.forName("org.eclipse.osgi.framework.debug.EclipseDebugTrace");
			clazz = Class.forName("org.eclipse.osgi.framework.debug.FrameworkDebugOptions");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.CopyOnWriteIdentityMap");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.CopyOnWriteIdentityMap$Entry");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.CopyOnWriteIdentityMap$EntryIterator");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.CopyOnWriteIdentityMap$EntrySet");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.EventDispatcher");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.EventManager");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.EventManager$1");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.EventManager$EventThread");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.EventManager$EventThread$Queued");
			clazz = Class.forName("org.eclipse.osgi.framework.eventmgr.ListenerQueue");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.AbstractBundle");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.AbstractBundle$1");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.AliasMapper");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleContextImpl");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleContextImpl$1");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleContextImpl$2");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleFragment");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleHost");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleRepository");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleResourceHandler");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleSource");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.BundleURLConnection");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.ConsoleManager");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.Constants");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.FilterImpl");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.FilterImpl$Parser");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.FilterImpl$ServiceReferenceDictionary");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.Framework");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.Framework$1");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.Framework$3");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.Framework$DuplicateBundleException");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.Framework$GetDataFileAction");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.FrameworkProperties");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.InternalSystemBundle");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.InternalSystemBundle$SystemBundleHeaders");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.ManifestLocalization");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.ManifestLocalization$BundleResourceBundle");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.ManifestLocalization$EmptyResouceBundle");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.ManifestLocalization$LocalizationResourceBundle");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.PackageAdminImpl");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.PackageAdminImpl$1");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.PackageAdminImpl$2");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.PackageAdminImpl$GetBundleAction");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.ReferenceInputStream");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.StartLevelEvent");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.StartLevelManager");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.StartLevelManager$1");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.SystemBundleActivator");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.Tokenizer");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.core.Util");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.ContentHandlerFactory");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.ContentHandlerProxy");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.MultiplexingContentHandler");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.MultiplexingFactory");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.MultiplexingFactory$InternalSecurityManager");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.MultiplexingURLStreamHandler");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.ProtocolActivator");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.StreamHandlerFactory");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.URLStreamHandlerFactoryProxyFor15");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.URLStreamHandlerProxy");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.bundleentry.Handler");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.bundleresource.Handler");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.reference.Handler");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.protocol.reference.ReferenceURLConnection");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.reliablefile.ReliableFile");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.reliablefile.ReliableFile$CacheInfo");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.reliablefile.ReliableFileInputStream");
			clazz = Class.forName("org.eclipse.osgi.framework.internal.reliablefile.ReliableFileOutputStream");
			clazz = Class.forName("org.eclipse.osgi.framework.log.FrameworkLog");
			clazz = Class.forName("org.eclipse.osgi.framework.log.FrameworkLogEntry");
			clazz = Class.forName("org.eclipse.osgi.framework.util.Headers");
			clazz = Class.forName("org.eclipse.osgi.framework.util.Headers$ArrayEnumeration");
			clazz = Class.forName("org.eclipse.osgi.framework.util.KeyedElement");
			clazz = Class.forName("org.eclipse.osgi.framework.util.KeyedHashSet");
			clazz = Class.forName("org.eclipse.osgi.framework.util.KeyedHashSet$EquinoxSetIterator");
			clazz = Class.forName("org.eclipse.osgi.framework.util.SecureAction");
			clazz = Class.forName("org.eclipse.osgi.framework.util.SecureAction$1");
			clazz = Class.forName("org.eclipse.osgi.framework.util.SecureAction$2");
			clazz = Class.forName("org.eclipse.osgi.framework.util.SecureAction$3");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.AdaptorMsg");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.AdaptorUtil");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.BaseClassLoadingHook");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.BaseHookConfigurator");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.BasePermissionStorage");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.BaseStorage");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.BaseStorage$StateSaver");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.BaseStorageHook");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.BundleInstall");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.DevClassLoadingHook");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.DevClassPathHelper");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.InvalidVersion");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.StateManager");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.SystemBundleData");
			clazz = Class.forName("org.eclipse.osgi.internal.baseadaptor.SystemBundleData$1");
			clazz = Class.forName("org.eclipse.osgi.internal.composite.CompositeBase");
			clazz = Class.forName("org.eclipse.osgi.internal.composite.CompositeConfigurator");
			clazz = Class.forName("org.eclipse.osgi.internal.composite.CompositeImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.composite.SurrogateImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.BundleLoader");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.BundleLoader$1");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.BundleLoader$ClassContext");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.BundleLoaderProxy");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.FilteredSourcePackage");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.MultiSourcePackage");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.NullPackageSource");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.PackageSource");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.SingleSourcePackage");
			clazz = Class.forName("org.eclipse.osgi.internal.loader.SystemBundleLoader");
			clazz = Class.forName("org.eclipse.osgi.internal.module.BundleConstraint");
			clazz = Class.forName("org.eclipse.osgi.internal.module.CompositeResolveHelper");
			clazz = Class.forName("org.eclipse.osgi.internal.module.CompositeResolveHelperRegistry");
			clazz = Class.forName("org.eclipse.osgi.internal.module.GenericCapability");
			clazz = Class.forName("org.eclipse.osgi.internal.module.GenericConstraint");
			clazz = Class.forName("org.eclipse.osgi.internal.module.GroupingChecker");
			clazz = Class.forName("org.eclipse.osgi.internal.module.GroupingChecker$PackageRoots");
			clazz = Class.forName("org.eclipse.osgi.internal.module.MappedList");
			clazz = Class.forName("org.eclipse.osgi.internal.module.PermissionChecker");
			clazz = Class.forName("org.eclipse.osgi.internal.module.ResolverBundle");
			clazz = Class.forName("org.eclipse.osgi.internal.module.ResolverConstraint");
			clazz = Class.forName("org.eclipse.osgi.internal.module.ResolverExport");
			clazz = Class.forName("org.eclipse.osgi.internal.module.ResolverImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.module.ResolverImport");
			clazz = Class.forName("org.eclipse.osgi.internal.module.VersionHashMap");
			clazz = Class.forName("org.eclipse.osgi.internal.module.VersionSupplier");
			clazz = Class.forName("org.eclipse.osgi.internal.permadmin.EquinoxProtectionDomain");
			clazz = Class.forName("org.eclipse.osgi.internal.permadmin.EquinoxSecurityManager");
			clazz = Class.forName("org.eclipse.osgi.internal.permadmin.PermissionAdminTable");
			clazz = Class.forName("org.eclipse.osgi.internal.permadmin.PermissionInfoCollection");
			clazz = Class.forName("org.eclipse.osgi.internal.permadmin.SecurePermissionStorage");
			clazz = Class.forName("org.eclipse.osgi.internal.permadmin.SecurityAdmin");
			clazz = Class.forName("org.eclipse.osgi.internal.permadmin.SecurityRow");
			clazz = Class.forName("org.eclipse.osgi.internal.permadmin.SecurityTable");
			clazz = Class.forName("org.eclipse.osgi.internal.profile.Profile");
			clazz = Class.forName("org.eclipse.osgi.internal.profile.ProfileLogger");
			clazz = Class.forName("org.eclipse.osgi.internal.provisional.verifier.CertificateVerifier");
			clazz = Class.forName("org.eclipse.osgi.internal.provisional.verifier.CertificateVerifierFactory");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.BaseDescriptionImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.BundleDeltaImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.BundleDescriptionImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.BundleDescriptionImpl$LazyData");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.BundleSpecificationImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.ComputeNodeOrder");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.ComputeNodeOrder$Digraph");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.ComputeNodeOrder$Digraph$Vertex");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.ExportPackageDescriptionImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.ImportPackageSpecificationImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.ReadOnlyState");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.StateBuilder");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.StateDeltaImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.StateHelperImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.StateImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.StateObjectFactoryImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.StateWriter");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.SystemState");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.UserState");
			clazz = Class.forName("org.eclipse.osgi.internal.resolver.VersionConstraintImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.service.security.KeyStoreTrustEngine");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.FilteredServiceListener");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ModifiedServiceEvent");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ServiceProperties");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ServiceReferenceImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ServiceRegistrationImpl");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ServiceRegistry");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ServiceRegistry$2");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ServiceUse");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ServiceUse$1");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ServiceUse$2");
			clazz = Class.forName("org.eclipse.osgi.internal.serviceregistry.ShrinkableCollection");
			clazz = Class.forName("org.eclipse.osgi.internal.signedcontent.LegacyVerifierFactory");
			clazz = Class.forName("org.eclipse.osgi.internal.signedcontent.SignedBundleFile");
			clazz = Class.forName("org.eclipse.osgi.internal.signedcontent.SignedBundleHook");
			clazz = Class.forName("org.eclipse.osgi.internal.signedcontent.SignedContentConstants");
			clazz = Class.forName("org.eclipse.osgi.service.datalocation.Location");
			clazz = Class.forName("org.eclipse.osgi.service.debug.DebugOptions");
			clazz = Class.forName("org.eclipse.osgi.service.debug.DebugOptionsListener");
			clazz = Class.forName("org.eclipse.osgi.service.debug.DebugTrace");
			clazz = Class.forName("org.eclipse.osgi.service.environment.EnvironmentInfo");
			clazz = Class.forName("org.eclipse.osgi.service.internal.composite.CompositeModule");
			clazz = Class.forName("org.eclipse.osgi.service.localization.BundleLocalization");
			clazz = Class.forName("org.eclipse.osgi.service.pluginconversion.PluginConversionException");
			clazz = Class.forName("org.eclipse.osgi.service.pluginconversion.PluginConverter");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.BaseDescription");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.BundleDelta");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.BundleDescription");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.BundleSpecification");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.DisabledInfo");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.ExportPackageDescription");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.GenericDescription");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.GenericSpecification");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.HostSpecification");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.ImportPackageSpecification");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.NativeCodeDescription");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.NativeCodeSpecification");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.PlatformAdmin");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.Resolver");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.State");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.StateDelta");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.StateHelper");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.StateObjectFactory");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.VersionConstraint");
			clazz = Class.forName("org.eclipse.osgi.service.resolver.VersionRange");
			clazz = Class.forName("org.eclipse.osgi.service.runnable.ApplicationLauncher");
			clazz = Class.forName("org.eclipse.osgi.service.runnable.ApplicationRunnable");
			clazz = Class.forName("org.eclipse.osgi.service.runnable.ParameterizedRunnable");
			clazz = Class.forName("org.eclipse.osgi.service.runnable.StartupMonitor");
			clazz = Class.forName("org.eclipse.osgi.service.security.TrustEngine");
			clazz = Class.forName("org.eclipse.osgi.service.urlconversion.URLConverter");
			clazz = Class.forName("org.eclipse.osgi.signedcontent.SignedContent");
			clazz = Class.forName("org.eclipse.osgi.signedcontent.SignedContentFactory");
			clazz = Class.forName("org.eclipse.osgi.storagemanager.ManagedOutputStream");
			clazz = Class.forName("org.eclipse.osgi.storagemanager.StorageManager");
			clazz = Class.forName("org.eclipse.osgi.storagemanager.StorageManager$Entry");
			clazz = Class.forName("org.eclipse.osgi.util.ManifestElement");
			clazz = Class.forName("org.eclipse.osgi.util.NLS");
			clazz = Class.forName("org.eclipse.osgi.util.NLS$MessagesProperties");
			clazz = Class.forName("org.eclipse.text.edits.MalformedTreeException");
			clazz = Class.forName("org.eclipse.text.edits.MultiTextEdit");
			clazz = Class.forName("org.eclipse.text.edits.ReplaceEdit");
			clazz = Class.forName("org.eclipse.text.edits.TextEdit");
			clazz = Class.forName("org.eclipse.text.edits.TextEdit$InsertionComparator");
			clazz = Class.forName("org.osgi.framework.AdminPermission");
			clazz = Class.forName("org.osgi.framework.AllServiceListener");
			clazz = Class.forName("org.osgi.framework.Bundle");
			clazz = Class.forName("org.osgi.framework.BundleActivator");
			clazz = Class.forName("org.osgi.framework.BundleContext");
			clazz = Class.forName("org.osgi.framework.BundleEvent");
			clazz = Class.forName("org.osgi.framework.BundleException");
			clazz = Class.forName("org.osgi.framework.BundleListener");
			clazz = Class.forName("org.osgi.framework.BundlePermission");
			clazz = Class.forName("org.osgi.framework.BundleReference");
			clazz = Class.forName("org.osgi.framework.Constants");
			clazz = Class.forName("org.osgi.framework.Filter");
			clazz = Class.forName("org.osgi.framework.FrameworkEvent");
			clazz = Class.forName("org.osgi.framework.FrameworkListener");
			clazz = Class.forName("org.osgi.framework.InvalidSyntaxException");
			clazz = Class.forName("org.osgi.framework.PackagePermission");
			clazz = Class.forName("org.osgi.framework.ServiceEvent");
			clazz = Class.forName("org.osgi.framework.ServiceException");
			clazz = Class.forName("org.osgi.framework.ServiceFactory");
			clazz = Class.forName("org.osgi.framework.ServiceListener");
			clazz = Class.forName("org.osgi.framework.ServicePermission");
			clazz = Class.forName("org.osgi.framework.ServiceReference");
			clazz = Class.forName("org.osgi.framework.ServiceRegistration");
			clazz = Class.forName("org.osgi.framework.SynchronousBundleListener");
			clazz = Class.forName("org.osgi.framework.Version");
			clazz = Class.forName("org.osgi.framework.hooks.service.EventHook");
			clazz = Class.forName("org.osgi.framework.hooks.service.FindHook");
			clazz = Class.forName("org.osgi.framework.hooks.service.ListenerHook");
			clazz = Class.forName("org.osgi.framework.hooks.service.ListenerHook$ListenerInfo");
			clazz = Class.forName("org.osgi.framework.launch.Framework");
			clazz = Class.forName("org.osgi.service.application.ApplicationAdminPermission");
			clazz = Class.forName("org.osgi.service.application.ApplicationDescriptor");
			clazz = Class.forName("org.osgi.service.application.ApplicationException");
			clazz = Class.forName("org.osgi.service.application.ApplicationHandle");
			clazz = Class.forName("org.osgi.service.application.ScheduledApplication");
			clazz = Class.forName("org.osgi.service.condpermadmin.ConditionalPermissionAdmin");
			clazz = Class.forName("org.osgi.service.condpermadmin.ConditionalPermissionInfo");
			clazz = Class.forName("org.osgi.service.condpermadmin.ConditionalPermissionUpdate");
			clazz = Class.forName("org.osgi.service.framework.CompositeBundle");
			clazz = Class.forName("org.osgi.service.framework.CompositeBundleFactory");
			clazz = Class.forName("org.osgi.service.framework.SurrogateBundle");
			clazz = Class.forName("org.osgi.service.packageadmin.PackageAdmin");
			clazz = Class.forName("org.osgi.service.packageadmin.RequiredBundle");
			clazz = Class.forName("org.osgi.service.permissionadmin.PermissionAdmin");
			clazz = Class.forName("org.osgi.service.permissionadmin.PermissionInfo");
			clazz = Class.forName("org.osgi.service.prefs.BackingStoreException");
			clazz = Class.forName("org.osgi.service.prefs.Preferences");
			clazz = Class.forName("org.osgi.service.prefs.PreferencesService");
			clazz = Class.forName("org.osgi.service.startlevel.StartLevel");
			clazz = Class.forName("org.osgi.service.url.AbstractURLStreamHandlerService");
			clazz = Class.forName("org.osgi.service.url.URLStreamHandlerService");
			clazz = Class.forName("org.osgi.util.tracker.AbstractTracked");
			clazz = Class.forName("org.osgi.util.tracker.ServiceTracker");
			clazz = Class.forName("org.osgi.util.tracker.ServiceTracker$1");
			clazz = Class.forName("org.osgi.util.tracker.ServiceTracker$AllTracked");
			clazz = Class.forName("org.osgi.util.tracker.ServiceTracker$Tracked");
			clazz = Class.forName("org.osgi.util.tracker.ServiceTrackerCustomizer");
			clazz = Class.forName("soot.rtlib.tamiflex.DefaultHandler");
			clazz = Class.forName("soot.rtlib.tamiflex.IUnexpectedReflectiveCallHandler");
			clazz = Class.forName("soot.rtlib.tamiflex.OpaquePredicate");
			clazz = Class.forName("soot.rtlib.tamiflex.ReflectiveCalls");
			clazz = Class.forName("soot.rtlib.tamiflex.ReflectiveCallsWrapper");
			clazz = Class.forName("soot.rtlib.tamiflex.SootSig");
			clazz = Class.forName("soot.rtlib.tamiflex.UnexpectedReflectiveCall");
		} catch (Exception ex ) {
			assert(false) : ex.toString();
		}
	}
	
	public static void premain(String args, Instrumentation inst) {
		System.out.println("Class Resolver Agent begin");

	}
}
