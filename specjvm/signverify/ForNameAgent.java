import java.lang.instrument.Instrumentation;

public class ForNameAgent extends ClassLoader {
	
	static {
		try {
			
			Class clazz;


			clazz = Class.forName("soot.rtlib.tamiflex.IUnexpectedReflectiveCallHandler");
			clazz = Class.forName("soot.rtlib.tamiflex.OpaquePredicate");
			clazz = Class.forName("soot.rtlib.tamiflex.ReflectiveCalls");
			clazz = Class.forName("soot.rtlib.tamiflex.ReflectiveCallsWrapper");
			clazz = Class.forName("soot.rtlib.tamiflex.SootSig");
			clazz = Class.forName("soot.rtlib.tamiflex.UnexpectedReflectiveCall");
			clazz = Class.forName("spec.benchmarks.check.C1");
			clazz = Class.forName("spec.benchmarks.check.C2");
			clazz = Class.forName("spec.benchmarks.check.C2intf");
			clazz = Class.forName("spec.benchmarks.check.C3");
			clazz = Class.forName("spec.benchmarks.check.C3intf");
			clazz = Class.forName("spec.benchmarks.check.LoopBounds");
			clazz = Class.forName("spec.benchmarks.check.LoopBounds2");
			clazz = Class.forName("spec.benchmarks.check.Main");
			//clazz = Class.forName("spec.benchmarks.check.PepTest");
			clazz = Class.forName("spec.benchmarks.check.SideIntf");
			clazz = Class.forName("spec.benchmarks.check.StringAndInt");
			clazz = Class.forName("spec.benchmarks.check.Sub");
			clazz = Class.forName("spec.benchmarks.check.Super");
			clazz = Class.forName("spec.benchmarks.check.subClass");
			clazz = Class.forName("spec.benchmarks.check.superClass");
			clazz = Class.forName("spec.benchmarks.crypto.Util");
			clazz = Class.forName("spec.benchmarks.crypto.signverify.Main");
			clazz = Class.forName("spec.benchmarks.crypto.Util");
			clazz = Class.forName("spec.benchmarks.crypto.signverify.Main");
			clazz = Class.forName("spec.harness.BenchmarkThread");
			clazz = Class.forName("spec.harness.CommandLineParser");
			clazz = Class.forName("spec.harness.Configuration");
			clazz = Class.forName("spec.harness.Context$1");
			clazz = Class.forName("spec.harness.Context");
			clazz = Class.forName("spec.harness.KnownIssues");
			clazz = Class.forName("spec.harness.Launch");
			clazz = Class.forName("spec.harness.ProgramRunner");
			clazz = Class.forName("spec.harness.SpecJVMBenchmark");
			clazz = Class.forName("spec.harness.SpecJVMBenchmarkBase");
			clazz = Class.forName("spec.harness.StopBenchmarkException");
			clazz = Class.forName("spec.harness.Util");
			clazz = Class.forName("spec.harness.analyzer.AnalyzersRunner");
			clazz = Class.forName("spec.harness.results.BenchmarkResult");
			clazz = Class.forName("spec.harness.results.IterationResult");
			clazz = Class.forName("spec.harness.results.LoopResult");
			clazz = Class.forName("spec.harness.results.SuiteResult");
			clazz = Class.forName("spec.harness.results.TestResult");
			clazz = Class.forName("spec.io.FileCache");
			clazz = Class.forName("spec.io.ValidityCheckOutputStream");
			clazz = Class.forName("spec.reporter.BenchmarkChart");
			clazz = Class.forName("spec.reporter.BenchmarkGroupRecords$BenchmarkGroupRecord");
			clazz = Class.forName("spec.reporter.BenchmarkGroupRecords$BenchmarkResultsIterator");
			clazz = Class.forName("spec.reporter.BenchmarkGroupRecords");
			clazz = Class.forName("spec.reporter.BenchmarkRecord$IterationRecord");
			clazz = Class.forName("spec.reporter.BenchmarkRecord");
			clazz = Class.forName("spec.reporter.HTMLWriter");
			clazz = Class.forName("spec.reporter.PlainWriter");
			clazz = Class.forName("spec.reporter.ReportGenerator$Pair");
			clazz = Class.forName("spec.reporter.ReportGenerator");
			clazz = Class.forName("spec.reporter.Reporter");
			clazz = Class.forName("spec.reporter.Utils");
			clazz = Class.forName("spec.reporter.Writer");


			clazz = Class.forName("java.security.AllPermission");
			clazz = Class.forName("java.security.AllPermission");
			clazz = Class.forName("java.security.AllPermissionCollection$1");
			clazz = Class.forName("java.security.AllPermissionCollection$1");
			clazz = Class.forName("java.security.AllPermissionCollection$1");
			clazz = Class.forName("java.security.AllPermissionCollection$1");
			clazz = Class.forName("java.security.AllPermissionCollection");
			clazz = Class.forName("java.security.AllPermissionCollection");
			clazz = Class.forName("java.security.AllPermissionCollection");
			clazz = Class.forName("java.security.AllPermissionCollection");
			clazz = Class.forName("java.security.AllPermissionCollection");
			clazz = Class.forName("java.security.BasicPermission");
			clazz = Class.forName("java.security.BasicPermission");
			clazz = Class.forName("java.security.BasicPermission");
			clazz = Class.forName("java.security.BasicPermissionCollection");
			clazz = Class.forName("java.security.BasicPermissionCollection");
			clazz = Class.forName("java.security.BasicPermissionCollection");
			clazz = Class.forName("java.security.BasicPermissionCollection");
			clazz = Class.forName("java.security.GeneralSecurityException");
			clazz = Class.forName("java.security.GeneralSecurityException");
			clazz = Class.forName("java.security.GeneralSecurityException");
			clazz = Class.forName("java.security.InvalidAlgorithmParameterException");
			clazz = Class.forName("java.security.InvalidAlgorithmParameterException");
			clazz = Class.forName("java.security.InvalidKeyException");
			clazz = Class.forName("java.security.InvalidKeyException");
			clazz = Class.forName("java.security.InvalidKeyException");
			clazz = Class.forName("java.security.InvalidParameterException");
			clazz = Class.forName("java.security.KeyException");
			clazz = Class.forName("java.security.KeyException");
			clazz = Class.forName("java.security.KeyException");
			clazz = Class.forName("java.security.KeyPair");
			clazz = Class.forName("java.security.KeyPair");
			clazz = Class.forName("java.security.KeyPairGenerator$Delegate");
			clazz = Class.forName("java.security.KeyPairGenerator$Delegate");
			clazz = Class.forName("java.security.KeyPairGenerator$Delegate");
			clazz = Class.forName("java.security.KeyPairGenerator$Delegate");
			clazz = Class.forName("java.security.KeyPairGenerator$Delegate");
			clazz = Class.forName("java.security.KeyPairGenerator$Delegate");
			clazz = Class.forName("java.security.KeyPairGenerator");
			clazz = Class.forName("java.security.KeyPairGenerator");
			clazz = Class.forName("java.security.KeyPairGenerator");
			clazz = Class.forName("java.security.KeyPairGenerator");
			clazz = Class.forName("java.security.KeyPairGenerator");
			clazz = Class.forName("java.security.KeyPairGenerator");
			clazz = Class.forName("java.security.KeyPairGenerator");
			clazz = Class.forName("java.security.KeyPairGenerator");
			clazz = Class.forName("java.security.KeyPairGeneratorSpi");
			clazz = Class.forName("java.security.MessageDigest");
			clazz = Class.forName("java.security.NoSuchAlgorithmException");
			clazz = Class.forName("java.security.NoSuchAlgorithmException");
			clazz = Class.forName("java.security.NoSuchAlgorithmException");
			clazz = Class.forName("java.security.NoSuchProviderException");
			clazz = Class.forName("java.security.Permission");
			clazz = Class.forName("java.security.Permission");
			clazz = Class.forName("java.security.Permission");
			clazz = Class.forName("java.security.PermissionCollection");
			clazz = Class.forName("java.security.PermissionCollection");
			clazz = Class.forName("java.security.Permissions");
			clazz = Class.forName("java.security.Permissions");
			clazz = Class.forName("java.security.Permissions");
			clazz = Class.forName("java.security.Permissions");
			clazz = Class.forName("java.security.Permissions");
			clazz = Class.forName("java.security.PermissionsEnumerator");
			clazz = Class.forName("java.security.PermissionsEnumerator");
			clazz = Class.forName("java.security.PermissionsEnumerator");
			clazz = Class.forName("java.security.PermissionsEnumerator");
			clazz = Class.forName("java.security.PermissionsEnumerator");
			clazz = Class.forName("java.security.PermissionsHash");
			clazz = Class.forName("java.security.PermissionsHash");
			clazz = Class.forName("java.security.PermissionsHash");
			clazz = Class.forName("java.security.PermissionsHash");
			clazz = Class.forName("java.security.Policy$UnsupportedEmptyCollection");
			clazz = Class.forName("java.security.Policy$UnsupportedEmptyCollection");
			clazz = Class.forName("java.security.Policy$UnsupportedEmptyCollection");
			clazz = Class.forName("java.security.Provider$EngineDescription");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$Service");
			clazz = Class.forName("java.security.Provider$ServiceKey");
			clazz = Class.forName("java.security.Provider$ServiceKey");
			clazz = Class.forName("java.security.Provider$ServiceKey");
			clazz = Class.forName("java.security.Provider$UString");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.Provider");
			clazz = Class.forName("java.security.ProviderException");
			clazz = Class.forName("java.security.Signature$CipherAdapter");
			clazz = Class.forName("java.security.Signature$CipherAdapter");
			clazz = Class.forName("java.security.Signature$CipherAdapter");
			clazz = Class.forName("java.security.Signature$CipherAdapter");
			clazz = Class.forName("java.security.Signature$CipherAdapter");
			clazz = Class.forName("java.security.Signature$CipherAdapter");
			clazz = Class.forName("java.security.Signature$CipherAdapter");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature$Delegate");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.Signature");
			clazz = Class.forName("java.security.SignatureException");
			clazz = Class.forName("java.security.SignatureException");
			clazz = Class.forName("java.security.SignatureSpi");
			clazz = Class.forName("java.security.SignatureSpi");
			clazz = Class.forName("java.security.SignatureSpi");
			clazz = Class.forName("java.security.SignatureSpi");
			clazz = Class.forName("java.security.UnresolvedPermission");
			clazz = Class.forName("java.security.UnresolvedPermission");
			clazz = Class.forName("java.security.UnresolvedPermission");
			clazz = Class.forName("java.security.UnresolvedPermissionCollection");
			clazz = Class.forName("java.security.UnresolvedPermissionCollection");
			clazz = Class.forName("java.security.UnresolvedPermissionCollection");
			clazz = Class.forName("java.security.UnresolvedPermissionCollection");
			clazz = Class.forName("java.security.UnresolvedPermissionCollection");
			clazz = Class.forName("java.security.cert.Certificate");
			clazz = Class.forName("javax.crypto.Cipher$Transform");
			clazz = Class.forName("javax.crypto.Cipher$Transform");
			clazz = Class.forName("javax.crypto.Cipher$Transform");
			clazz = Class.forName("javax.crypto.Cipher$Transform");
			clazz = Class.forName("javax.crypto.Cipher$Transform");
			clazz = Class.forName("javax.crypto.Cipher$Transform");
			clazz = Class.forName("javax.crypto.Cipher$Transform");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.Cipher");
			clazz = Class.forName("javax.crypto.CipherSpi");
			clazz = Class.forName("javax.crypto.CryptoAllPermission");
			clazz = Class.forName("javax.crypto.CryptoAllPermission");
			clazz = Class.forName("javax.crypto.CryptoAllPermissionCollection");
			clazz = Class.forName("javax.crypto.CryptoAllPermissionCollection");
			clazz = Class.forName("javax.crypto.CryptoAllPermissionCollection");
			clazz = Class.forName("javax.crypto.CryptoAllPermissionCollection");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermission");
			clazz = Class.forName("javax.crypto.CryptoPermissionCollection");
			clazz = Class.forName("javax.crypto.CryptoPermissionCollection");
			clazz = Class.forName("javax.crypto.CryptoPermissionCollection");
			clazz = Class.forName("javax.crypto.CryptoPermissionCollection");
			clazz = Class.forName("javax.crypto.CryptoPermissions");
			clazz = Class.forName("javax.crypto.CryptoPermissions");
			clazz = Class.forName("javax.crypto.CryptoPermissions");
			clazz = Class.forName("javax.crypto.CryptoPermissions");
			clazz = Class.forName("javax.crypto.CryptoPermissions");
			clazz = Class.forName("javax.crypto.CryptoPermissions");
			clazz = Class.forName("javax.crypto.CryptoPermissions");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser$CryptoPermissionEntry");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser$GrantEntry");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser$GrantEntry");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser$GrantEntry");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser$ParsingException");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser$ParsingException");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser$ParsingException");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.CryptoPolicyParser");
			clazz = Class.forName("javax.crypto.ExemptionMechanism");
			clazz = Class.forName("javax.crypto.ExemptionMechanism");
			clazz = Class.forName("javax.crypto.ExemptionMechanism");
			clazz = Class.forName("javax.crypto.ExemptionMechanism");
			clazz = Class.forName("javax.crypto.JarVerifier$1");
			clazz = Class.forName("javax.crypto.JarVerifier");
			clazz = Class.forName("javax.crypto.JarVerifier");
			clazz = Class.forName("javax.crypto.JarVerifier");
			clazz = Class.forName("javax.crypto.JceSecurity$2");
			clazz = Class.forName("javax.crypto.JceSecurity");
			clazz = Class.forName("javax.crypto.JceSecurity");
			clazz = Class.forName("javax.crypto.JceSecurity");
			clazz = Class.forName("javax.crypto.JceSecurity");
			clazz = Class.forName("javax.crypto.JceSecurity");
			clazz = Class.forName("javax.crypto.JceSecurity");
			clazz = Class.forName("javax.crypto.JceSecurity");
			clazz = Class.forName("javax.crypto.JceSecurityManager");
			clazz = Class.forName("javax.crypto.JceSecurityManager");
			clazz = Class.forName("javax.crypto.JceSecurityManager");
			clazz = Class.forName("javax.crypto.NoSuchPaddingException");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.NullCipherSpi");
			clazz = Class.forName("javax.crypto.PermissionsEnumerator");
			clazz = Class.forName("javax.crypto.PermissionsEnumerator");
			clazz = Class.forName("javax.crypto.PermissionsEnumerator");
			clazz = Class.forName("javax.crypto.PermissionsEnumerator");
			clazz = Class.forName("javax.crypto.PermissionsEnumerator");
			clazz = Class.forName("javax.crypto.spec.PBEParameterSpec");
			clazz = Class.forName("javax.crypto.spec.RC2ParameterSpec");
			clazz = Class.forName("javax.crypto.spec.RC2ParameterSpec");
			clazz = Class.forName("javax.crypto.spec.RC5ParameterSpec");
			clazz = Class.forName("javax.crypto.spec.RC5ParameterSpec");
			clazz = Class.forName("javax.crypto.spec.SecretKeySpec");
			clazz = Class.forName("javax.crypto.spec.SecretKeySpec");
			clazz = Class.forName("javax.crypto.spec.SecretKeySpec");
			clazz = Class.forName("javax.crypto.spec.SecretKeySpec");

		} catch (Exception ex ) {
			assert(false) : ex.toString();
		}
	}
	
	public static void premain(String args, Instrumentation inst) {
		System.out.println("Class Resolver Agent begin");

	}
}
